# precompile(Tuple{typeof(Base.tuple_type_tail), Type})
# precompile(Tuple{typeof(Base.argtail), Type, Type})
# precompile(Tuple{typeof(Base.argtail), Type})
# precompile(Tuple{typeof(Base._compute_eltype), Any})
# precompile(Tuple{typeof(Base.iterate), Base.IdSet{Any}})
# precompile(Tuple{typeof(Base.convert), Type{Any}, Type})
# precompile(Tuple{typeof(Base.iterate), Base.IdSet{Any}, Int64})
# precompile(Tuple{typeof(Base.afoldl), Base.var"#42#43", Type, Type, Type, Type, Type, Type, Type})
# precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{InMemoryDatasets.HeapSortAlg, Bool, Bool, Bool, Bool}}, Int64})
# precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Base.Missing}}, Int64})
# precompile(Tuple{typeof(Base.print_to_string), Int64, Vararg{Int64, N} where N})
# precompile(Tuple{Type{Base.Pair{Symbol, Any}}, Any, Any})
# precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Int64, 1}})
# precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Float64, 1}})
# precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Dates.Date, 1}})
# precompile(Tuple{typeof(Base.convert), Type{Any}, Array{InMemoryDatasets.Characters{2, UInt8}, 1}})
# precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Int32, 1}})
# precompile(Tuple{typeof(Base.convert), Type{Any}, Array{Float32, 1}})
# precompile(Tuple{typeof(Base.length), Array{Float64, 1}})
# precompile(Tuple{typeof(Base.length), Array{Dates.Date, 1}})
# precompile(Tuple{typeof(Base.length), Array{InMemoryDatasets.Characters{2, UInt8}, 1}})
# precompile(Tuple{typeof(Base.length), Array{Float32, 1}})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Int64, 1}, Int64, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Float64, 1}, Int64, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Dates.Date, 1}, Int64, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), String, Int64, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{InMemoryDatasets.Characters{2, UInt8}, 1}, Int64, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Int32, 1}, Int64, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Float32, 1}, Int64, Bool})
# precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Float64}, 1}})
# precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Dates.Date}, 1}})
# precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, String}, 1}})
# precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}})
# precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Float32}, 1}})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Int64})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Int64})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, String}, 1}, Int64})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Int64})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Int64})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Int64})
# precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.Dataset, Array{Int64, 1}, Array{Function, 1}, Array{Bool, 1}, InMemoryDatasets.HeapSortAlg, Base.Val{Int32}})
# precompile(Tuple{typeof(Base.Threads.threading_run), Function})
# precompile(Tuple{InMemoryDatasets.var"#1275#threadsfor_fun#503"{Array{Int32, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Function, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Int64}, 1}, typeof(Base.identity), Bool})
# precompile(Tuple{typeof(Core.Compiler.return_type), Any, Any})
# precompile(Tuple{typeof(Core.Compiler.return_type), Any, Any, UInt64})
# precompile(Tuple{typeof(Core.Compiler.return_type), Core.Compiler.NativeInterpreter, Any, Any})
# precompile(Tuple{typeof(Core.Compiler.contains_is), Core.SimpleVector, Any})
# precompile(Tuple{Type{Array{Union{Base.Missing, Int64}, 1}}, UndefInitializer, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Bool, Bool, Symbol})
# precompile(Tuple{InMemoryDatasets.var"#1209#threadsfor_fun#499"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_minimum), Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_minimum), Function, Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{InMemoryDatasets.var"#215#threadsfor_fun#94"{typeof(Base.identity), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Int64, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"##stat_minimum#67", Int64, Int64, typeof(InMemoryDatasets.stat_minimum), typeof(Base.identity), Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{typeof(Base.convert), Type{Integer}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets.hp_maximum), Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_maximum), Function, Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{InMemoryDatasets.var"#200#threadsfor_fun#93"{typeof(Base.identity), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Int64, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"##stat_maximum#64", Int64, Int64, typeof(InMemoryDatasets.stat_maximum), typeof(Base.identity), Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{typeof(Base.Checked.sub_with_overflow), Int64, Int64})
# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Bool}, Int64})
# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int64, Bool}, Int64, Int64})
# precompile(Tuple{typeof(Base.Checked.add_with_overflow), Int64, Int64})
# precompile(Tuple{typeof(Base.:(<)), Int64, Float64})
# precompile(Tuple{typeof(Base.resize!), Array{Int32, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort_int!), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int64, Int64, Bool, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
# precompile(Tuple{InMemoryDatasets.var"#1120#threadsfor_fun#490"{Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int64, Int64, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1067#threadsfor_fun#489"{Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Base.Order.ForwardOrdering, Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.StepRange{Int64, Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int64}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
# precompile(Tuple{InMemoryDatasets.var"#1011#threadsfor_fun#486"{Array{Int32, 1}, Array{Bool, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1026#threadsfor_fun#487"{Int32, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int64}, 1}, Int32, Base.Order.ForwardOrdering, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(Base.:(==)), Int64, Int32})
# precompile(Tuple{typeof(InMemoryDatasets._stablise_sort!), Array{Int32, 1}, Array{Int32, 1}, Int32, InMemoryDatasets.HeapSortAlg})
# precompile(Tuple{InMemoryDatasets.var"#1311#threadsfor_fun#510"{Array{Int32, 1}, Array{Int32, 1}, Int32, InMemoryDatasets.HeapSortAlg, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, Function, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Float64}, 1}, typeof(Base.identity), Bool})
# precompile(Tuple{Type{Array{Union{Base.Missing, Float64}, 1}}, UndefInitializer, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by!), Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Bool, Bool, Symbol})
# precompile(Tuple{InMemoryDatasets.var"#1209#threadsfor_fun#499"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1225#threadsfor_fun#500"{Array{Union{Base.Missing, Float64}, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
# precompile(Tuple{InMemoryDatasets.var"#1052#threadsfor_fun#488"{Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1067#threadsfor_fun#489"{Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, Base.Order.ForwardOrdering, Array{Int32, 1}, Array{Union{Base.Missing, Float64}, 1}, Base.StepRange{Int64, Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Float64}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
# precompile(Tuple{InMemoryDatasets.var"#1026#threadsfor_fun#487"{Int32, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Float64}, 1}, Int32, Base.Order.ForwardOrdering, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Dates.Date}, 1}, Array{Int32, 1}, Function, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Dates.Date}, 1}, typeof(Base.identity), Bool})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Bool, Bool, Symbol})
# precompile(Tuple{InMemoryDatasets.var"#1209#threadsfor_fun#499"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
# precompile(Tuple{InMemoryDatasets.var"#1052#threadsfor_fun#488"{Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, Function, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, String}, 1}, typeof(Base.identity), Bool})
# precompile(Tuple{Type{Array{Union{Base.Missing, String}, 1}}, UndefInitializer, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Bool, Bool, Symbol})
# precompile(Tuple{InMemoryDatasets.var"#1209#threadsfor_fun#499"{Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
# precompile(Tuple{InMemoryDatasets.var"#1052#threadsfor_fun#488"{Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1067#threadsfor_fun#489"{Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, Base.Order.ForwardOrdering, Array{Int32, 1}, Array{Union{Base.Missing, String}, 1}, Base.StepRange{Int64, Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, String}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
# precompile(Tuple{InMemoryDatasets.var"#1026#threadsfor_fun#487"{Int32, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, String}, 1}, Int32, Base.Order.ForwardOrdering, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Int32, 1}, Function, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, typeof(Base.identity), Bool})
# precompile(Tuple{Type{Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}}, UndefInitializer, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by!), Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Bool, Bool, Symbol})
# precompile(Tuple{InMemoryDatasets.var"#1209#threadsfor_fun#499"{Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
# precompile(Tuple{InMemoryDatasets.var"#1052#threadsfor_fun#488"{Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1067#threadsfor_fun#489"{Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Int32, 1}, Base.Order.ForwardOrdering, Array{Int32, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Base.StepRange{Int64, Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
# precompile(Tuple{InMemoryDatasets.var"#1026#threadsfor_fun#487"{Int32, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Int32, Base.Order.ForwardOrdering, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Function, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Int32}, 1}, typeof(Base.identity), Bool})
# precompile(Tuple{Type{Array{Union{Base.Missing, Int32}, 1}}, UndefInitializer, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by!), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Bool, Bool, Symbol})
# precompile(Tuple{InMemoryDatasets.var"#1209#threadsfor_fun#499"{Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_minimum), Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_minimum), Function, Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{InMemoryDatasets.var"#215#threadsfor_fun#94"{typeof(Base.identity), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Int64, Int64, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"##stat_minimum#67", Int64, Int64, typeof(InMemoryDatasets.stat_minimum), typeof(Base.identity), Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{typeof(Base.convert), Type{Integer}, Int32})
# precompile(Tuple{typeof(InMemoryDatasets.hp_maximum), Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_maximum), Function, Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{InMemoryDatasets.var"#200#threadsfor_fun#93"{typeof(Base.identity), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Int64, Int64, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"##stat_maximum#64", Int64, Int64, typeof(InMemoryDatasets.stat_maximum), typeof(Base.identity), Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{typeof(Base.Checked.sub_with_overflow), Int32, Int32})
# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int32, Bool}, Int64})
# precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Int32, Bool}, Int64, Int64})
# precompile(Tuple{typeof(Base.Checked.add_with_overflow), Int32, Int32})
# precompile(Tuple{typeof(Base.:(<)), Int32, Float64})
# precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort_int!), Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int32, Int32, Bool, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
# precompile(Tuple{InMemoryDatasets.var"#1120#threadsfor_fun#490"{Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int32, Int32, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1067#threadsfor_fun#489"{Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Base.Order.ForwardOrdering, Array{Int32, 1}, Array{Union{Base.Missing, Int32}, 1}, Base.StepRange{Int64, Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int32}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
# precompile(Tuple{InMemoryDatasets.var"#1026#threadsfor_fun#487"{Int32, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int32}, 1}, Int32, Base.Order.ForwardOrdering, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, Function, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Float32}, 1}, typeof(Base.identity), Bool})
# precompile(Tuple{Type{Array{Union{Base.Missing, Float32}, 1}}, UndefInitializer, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._apply_by!), Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Bool, Bool, Symbol})
# precompile(Tuple{InMemoryDatasets.var"#1209#threadsfor_fun#499"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, InMemoryDatasets.var"#496#498"{typeof(Base.identity)}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
# precompile(Tuple{InMemoryDatasets.var"#1052#threadsfor_fun#488"{Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1067#threadsfor_fun#489"{Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, Base.Order.ForwardOrdering, Array{Int32, 1}, Array{Union{Base.Missing, Float32}, 1}, Base.StepRange{Int64, Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Float32}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
# precompile(Tuple{InMemoryDatasets.var"#1026#threadsfor_fun#487"{Int32, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Float32}, 1}, Int32, Base.Order.ForwardOrdering, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.Dataset, Base.UnitRange{Int64}, Array{Function, 1}, Array{Bool, 1}, InMemoryDatasets.HeapSortAlg, Base.Val{Int32}})
# precompile(Tuple{InMemoryDatasets.var"#1194#threadsfor_fun#494"{Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int32, Bool, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1164#threadsfor_fun#492"{Array{Int32, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1164#threadsfor_fun#492"{Array{Int32, 1}, Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1164#threadsfor_fun#492"{Array{Int32, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1194#threadsfor_fun#494"{Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int32, Bool, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1164#threadsfor_fun#492"{Array{Int32, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(Base.Broadcast.combine_eltypes), Type, Tuple{Base.RefValue{Array{Int64, 1}}, Array{Function, 1}}})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Base.sum)}}, Any, Any})
# precompile(Tuple{typeof(Base.convert), Type{Array{Int64, 1}}, Array{Int64, 1}})
# precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Type{Base.Pair{A, B} where B where A}, Tuple{Base.RefValue{Array{Int64, 1}}, Base.Broadcast.Extruded{Array{Function, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Base.Pair{Array{Int64, 1}, typeof(Base.sum)}}})
# precompile(Tuple{typeof(Base.setindex!), Array{Base.Pair{Array{Int64, 1}, typeof(Base.sum)}, 1}, Base.Pair{Array{Int64, 1}, typeof(Base.sum)}, Int64})
# precompile(Tuple{typeof(Base.Broadcast.copyto_nonleaf!), Array{Base.Pair{Array{Int64, 1}, typeof(Base.sum)}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Type{Base.Pair{A, B} where B where A}, Tuple{Base.RefValue{Array{Int64, 1}}, Base.Broadcast.Extruded{Array{Function, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.OneTo{Int64}, Int64, Int64})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Statistics.mean)}}, Any, Any})
# precompile(Tuple{typeof(Base.similar), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Type{Base.Pair{A, B} where B where A}, Tuple{Base.RefValue{Array{Int64, 1}}, Base.Broadcast.Extruded{Array{Function, 1}, Tuple{Bool}, Tuple{Int64}}}}, Type{Base.Pair{Array{Int64, 1}, _A} where _A}})
# precompile(Tuple{typeof(Base.Broadcast.restart_copyto_nonleaf!), Array{Base.Pair{Array{Int64, 1}, _A} where _A, 1}, Array{Base.Pair{Array{Int64, 1}, typeof(Base.sum)}, 1}, Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Tuple{Base.OneTo{Int64}}, Type{Base.Pair{A, B} where B where A}, Tuple{Base.RefValue{Array{Int64, 1}}, Base.Broadcast.Extruded{Array{Function, 1}, Tuple{Bool}, Tuple{Int64}}}}, Base.Pair{Array{Int64, 1}, typeof(Statistics.mean)}, Int64, Base.OneTo{Int64}, Int64, Int64})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Base.length)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Base.maximum)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Base.minimum)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Statistics.var)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Statistics.std)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Statistics.median)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{Array{Int64, 1}, typeof(Base.sort)}}, Any, Any})
# precompile(Tuple{typeof(InMemoryDatasets.combine), InMemoryDatasets.GroupBy, Any})
# precompile(Tuple{typeof(InMemoryDatasets.normalize_combine_multiple!), Int64, InMemoryDatasets.Index, InMemoryDatasets.Index, Any})
# precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), Int64, InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Base.Pair{Array{Int64, 1}, _A} where _A, 1}})
# precompile(Tuple{typeof(Base.typename), DataType})
# precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), Int64, InMemoryDatasets.Index, InMemoryDatasets.Index, Base.Pair{var"#s422", var"#s421"} where var"#s421"<:Union{Expr, Function} where var"#s422"<:Union{Base.Colon, Base.Regex, AbstractArray{T, 1} where T, InMemoryDatasets.DataAPI.All{T} where T<:Tuple, InMemoryDatasets.DataAPI.Between{T1, T2} where T2<:Union{Int64, Symbol} where T1<:Union{Int64, Symbol}, InMemoryDatasets.DataAPI.Cols{T} where T<:Tuple, InvertedIndices.InvertedIndex{S} where S}})
# precompile(Tuple{typeof(Base.getindex), InMemoryDatasets.Index, Array{Int64, 1}})
# precompile(Tuple{typeof(Base.getindex), Array{Int64, 1}, Int64})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Base.sum)}}, Any, Any})
# precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), Int64, InMemoryDatasets.Index, InMemoryDatasets.Index, Base.Pair{var"#s422", var"#s421"} where var"#s421"<:Function where var"#s422"<:Union{AbstractString, Signed, Symbol, Unsigned}})
# precompile(Tuple{typeof(InMemoryDatasets.funname), Function})
# precompile(Tuple{typeof(Base.nameof), Function})
# precompile(Tuple{typeof(Base.getindex), String, Int64})
# precompile(Tuple{typeof(Base.:(==)), Char, Char})
# precompile(Tuple{Type{Base.Pair{typeof(Base.sum), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Base.sum), Symbol}})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Statistics.mean)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{typeof(Statistics.mean), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Statistics.mean), Symbol}})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Base.length)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{typeof(Base.length), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Base.length), Symbol}})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Base.maximum)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{typeof(Base.maximum), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Base.maximum), Symbol}})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Base.minimum)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{typeof(Base.minimum), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Base.minimum), Symbol}})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Statistics.var)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{typeof(Statistics.var), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Statistics.var), Symbol}})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Statistics.std)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{typeof(Statistics.std), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Statistics.std), Symbol}})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Statistics.median)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{typeof(Statistics.median), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Statistics.median), Symbol}})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Base.sort)}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{typeof(Base.sort), Symbol}}, Any, Any})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, Base.Pair{typeof(Base.sort), Symbol}})
# precompile(Tuple{typeof(InMemoryDatasets._create_index_for_newds), InMemoryDatasets.Dataset, Array{Any, 1}, Array{Int64, 1}})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Base.sum), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Base.sum), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.haskey), Base.Dict{Symbol, Int64}, Symbol})
# precompile(Tuple{typeof(Base.push!), Base.Dict{Symbol, Int64}, Base.Pair{Symbol, Int64}})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Statistics.mean), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Statistics.mean), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Base.length), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Base.length), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Base.maximum), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Base.maximum), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Base.minimum), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Base.minimum), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Statistics.var), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Statistics.var), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Statistics.std), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Statistics.std), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Statistics.median), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Statistics.median), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{Symbol, Base.Pair{typeof(Base.sort), Symbol}}, Symbol})
# precompile(Tuple{typeof(Base.getproperty), Base.Pair{typeof(Base.sort), Symbol}, Symbol})
# precompile(Tuple{typeof(Base.haskey), InMemoryDatasets.Index, Symbol})
# precompile(Tuple{typeof(Base.getindex), InMemoryDatasets.Index, Symbol})
# precompile(Tuple{typeof(Base.push!), Array{Int64, 1}, Int64})
# precompile(Tuple{typeof(Base.in), Symbol, Array{Any, 1}})
# precompile(Tuple{Type{InMemoryDatasets.DatasetColumn{T, E} where E where T<:InMemoryDatasets.AbstractDataset}, Int64, InMemoryDatasets.Dataset, Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{typeof(Base.getproperty), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, Int64}, 1}}, Symbol})
# precompile(Tuple{typeof(InMemoryDatasets.return_type), Function, Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{InMemoryDatasets.var"#475#476", Base.Pair{Symbol, Base.Pair{typeof(Base.sum), Symbol}}})
# precompile(Tuple{typeof(Base._similar_for), Base.SubArray{Any, 1, Array{Any, 1}, Tuple{Base.UnitRange{Int64}}, true}, Type{Symbol}, Base.Generator{Base.SubArray{Any, 1, Array{Any, 1}, Tuple{Base.UnitRange{Int64}}, true}, InMemoryDatasets.var"#475#476"}, Base.HasShape{1}})
# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Symbol, 1}, Symbol, Base.Generator{Base.SubArray{Any, 1, Array{Any, 1}, Tuple{Base.UnitRange{Int64}}, true}, InMemoryDatasets.var"#475#476"}, Tuple{Base.OneTo{Int64}, Int64}})
# precompile(Tuple{Type{InMemoryDatasets.DatasetColumn{T, E} where E where T<:InMemoryDatasets.AbstractDataset}, Int64, InMemoryDatasets.Dataset, Array{Union{Base.Missing, Float64}, 1}})
# precompile(Tuple{typeof(Base.getproperty), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, Float64}, 1}}, Symbol})
# precompile(Tuple{typeof(InMemoryDatasets.return_type), Function, Array{Union{Base.Missing, Float64}, 1}})
# precompile(Tuple{Type{InMemoryDatasets.DatasetColumn{T, E} where E where T<:InMemoryDatasets.AbstractDataset}, Int64, InMemoryDatasets.Dataset, Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{typeof(Base.getproperty), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, Int32}, 1}}, Symbol})
# precompile(Tuple{typeof(InMemoryDatasets.return_type), Function, Array{Union{Base.Missing, Int32}, 1}})
# precompile(Tuple{Type{InMemoryDatasets.DatasetColumn{T, E} where E where T<:InMemoryDatasets.AbstractDataset}, Int64, InMemoryDatasets.Dataset, Array{Union{Base.Missing, Float32}, 1}})
# precompile(Tuple{typeof(Base.getproperty), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, Float32}, 1}}, Symbol})
# precompile(Tuple{typeof(InMemoryDatasets.return_type), Function, Array{Union{Base.Missing, Float32}, 1}})
# precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Base.Colon}}, Int64})
# precompile(Tuple{InMemoryDatasets.var"#475#476", Base.Pair{Symbol, Base.Pair{typeof(Statistics.mean), Symbol}}})
# precompile(Tuple{InMemoryDatasets.var"#475#476", Base.Pair{Symbol, Base.Pair{typeof(Base.length), Symbol}}})
# precompile(Tuple{InMemoryDatasets.var"#475#476", Base.Pair{Symbol, Base.Pair{typeof(Base.maximum), Symbol}}})
# precompile(Tuple{InMemoryDatasets.var"#475#476", Base.Pair{Symbol, Base.Pair{typeof(Base.minimum), Symbol}}})
# precompile(Tuple{InMemoryDatasets.var"#475#476", Base.Pair{Symbol, Base.Pair{typeof(Statistics.var), Symbol}}})
# precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{Bool, Nothing}}, Int64})
# precompile(Tuple{InMemoryDatasets.var"#475#476", Base.Pair{Symbol, Base.Pair{typeof(Statistics.std), Symbol}}})
# precompile(Tuple{InMemoryDatasets.var"#475#476", Base.Pair{Symbol, Base.Pair{typeof(Statistics.median), Symbol}}})
# precompile(Tuple{Type{Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}}, UndefInitializer, Int32})
# precompile(Tuple{Type{Array{Int64, 1}}, UndefInitializer, Int32})
# precompile(Tuple{typeof(Base.getindex), Array{AbstractArray{T, 1} where T, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._threaded_permute_for_groupby), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}})
# precompile(Tuple{InMemoryDatasets.var"#296#threadsfor_fun#175"{Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._compute_the_mutli_row_trans!), Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, typeof(Base.sort), Int64, Array{Int32, 1}, Int32})
# precompile(Tuple{InMemoryDatasets.var"#864#threadsfor_fun#477"{Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, typeof(Base.sort), Array{Int32, 1}, Int32, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(Base.cumsum!), Array{Int64, 1}, Array{Int64, 1}})
# precompile(Tuple{typeof(Base.lastindex), Array{Int64, 1}})
# precompile(Tuple{typeof(Base.getindex), InMemoryDatasets.Dataset, typeof(Base.:(!)), Int64})
# precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Int64}, 1}, Int64})
# precompile(Tuple{typeof(Base.view), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}})
# precompile(Tuple{typeof(InMemoryDatasets._push_groups_to_res!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Int32, 1}, Array{Int64, 1}, Int64, Int64, Array{Int64, 1}, Int32})
# precompile(Tuple{InMemoryDatasets.var"#895#threadsfor_fun#479"{Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Int32, 1}, Array{Int64, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(Base.get), Base.Dict{Int64, Function}, Int64, Function})
# precompile(Tuple{Type{Base.Pair{Symbol, typeof(Base.identity)}}, Any, Any})
# precompile(Tuple{typeof(InMemoryDatasets.setformat!), InMemoryDatasets.Dataset, Base.Pair{Symbol, typeof(Base.identity)}})
# precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Int64}, 1}, InMemoryDatasets.Dataset, Symbol, Function, Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets.DataAPI.defaultarray), Type{Union{Base.Missing, Int64}}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._threaded_permute_for_groupby), Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}})
# precompile(Tuple{InMemoryDatasets.var"#296#threadsfor_fun#175"{Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Float64}, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Float64}, 1}, InMemoryDatasets.Dataset, Symbol, Function, Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets.DataAPI.defaultarray), Type{Union{Base.Missing, Float64}}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._threaded_permute_for_groupby), Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}})
# precompile(Tuple{InMemoryDatasets.var"#296#threadsfor_fun#175"{Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int32}, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Int32}, 1}, InMemoryDatasets.Dataset, Symbol, Function, Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._threaded_permute_for_groupby), Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}})
# precompile(Tuple{InMemoryDatasets.var"#296#threadsfor_fun#175"{Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Float32}, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Float32}, 1}, InMemoryDatasets.Dataset, Symbol, Function, Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets.DataAPI.defaultarray), Type{Union{Base.Missing, Float32}}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Statistics.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Statistics.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Statistics.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Statistics.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Statistics.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Statistics.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Statistics.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Statistics.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets.DataAPI.defaultarray), Type{Union{Base.Missing, Int32}}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Statistics.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Statistics.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Statistics.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Statistics.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Statistics.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Statistics.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Statistics.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Statistics.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Statistics.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Statistics.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Statistics.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Statistics.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Statistics.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Statistics.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Statistics.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Statistics.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Statistics.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Statistics.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Statistics.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Statistics.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Statistics.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Statistics.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Statistics.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Statistics.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier_special), Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, InMemoryDatasets.Dataset, Symbol, Function, Symbol, Base.Dict{Symbol, Int64}, Int64, Int32, Array{Int64, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._fill_res_with_special_res!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Int32, Array{Int64, 1}, Int64})
# precompile(Tuple{InMemoryDatasets.var"#970#threadsfor_fun#484"{Array{Union{Base.Missing, Int64}, 1}, Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Array{Int64, 1}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._special_res_fill_barrier!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#940#threadsfor_fun#482"{Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"##transpose#548", Nothing, Nothing, Function, String, Base.Missing, Bool, Bool, typeof(Base.transpose), InMemoryDatasets.Dataset, Base.UnitRange{Int64}})
# precompile(Tuple{Type{NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :mapformats), T} where T<:Tuple}, Tuple{Nothing, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Bool}})
# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(InMemoryDatasets._default_renamerowid_function), Array{String, 1}})
# precompile(Tuple{typeof(Base.collect_similar), Array{String, 1}, Base.Generator{Array{String, 1}, typeof(InMemoryDatasets._default_renamerowid_function)}})
# precompile(Tuple{typeof(InMemoryDatasets._simple_transpose_ds_generate), Type, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{String, 1}, Array{String, 1}, String, Bool})
# precompile(Tuple{Type{Array{Any, 2}}, UndefInitializer, Int64, Int64})
# precompile(Tuple{InMemoryDatasets.var"#1381#threadsfor_fun#533"{Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Any, 2}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, String}, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Float32}, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Int64}, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Float64}, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Dates.Date}, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, InMemoryDatasets.Characters{2, UInt8}}, 1}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Int32}, 1}, Int64})
# precompile(Tuple{Type{InMemoryDatasets.Dataset}, Array{Any, 2}, Array{String, 1}})
# precompile(Tuple{InMemoryDatasets.var"#266#threadsfor_fun#145"{Bool, Array{AbstractArray{T, 1} where T, 1}, Base.OneTo{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Any, 1}, Int64, Bool})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Any, 1}, Int64})
# precompile(Tuple{typeof(Base.firstindex), Array{Any, 1}})
# precompile(Tuple{InMemoryDatasets.var"##transpose#549", Nothing, Nothing, Function, String, Base.Missing, Bool, Bool, typeof(Base.transpose), InMemoryDatasets.GroupBy, Array{Int64, 1}})
# precompile(Tuple{Type{NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), T} where T<:Tuple}, Tuple{Nothing, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}})
# precompile(Tuple{InMemoryDatasets.var"#ds_transpose##kw", NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), Tuple{Nothing, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}}, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Array{Int64, 1}, Array{Int64, 1}})
# precompile(Tuple{InMemoryDatasets.var"##ds_transpose#547", Nothing, Nothing, Function, String, Base.Missing, Bool, Bool, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Array{Int64, 1}, Array{Int64, 1}})
# precompile(Tuple{Base.BottomRF{typeof(Base.promote_type)}, Type, Type})
# precompile(Tuple{Base.Colon, Int64, Int32})
# precompile(Tuple{typeof(Base.view), Array{Int32, 1}, Base.UnitRange{Int64}})
# precompile(Tuple{typeof(InMemoryDatasets._obtain_maximum_groups_size), Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets._generate_col_row_names), Function, Function, Base.UnitRange{Int64}, Array{String, 1}})
# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, typeof(InMemoryDatasets._default_renamecolid_function_withoutid), Base.UnitRange{Int64}})
# precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, typeof(InMemoryDatasets._default_renamecolid_function_withoutid)}})
# precompile(Tuple{InMemoryDatasets.var"#_fill_outputmat_withoutid##kw", NamedTuple{(:default_fill,), Tuple{Base.Missing}}, typeof(InMemoryDatasets._fill_outputmat_withoutid), Type, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, InMemoryDatasets.GroupBy, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Array{String, 1}, Array{String, 1}, Bool})
# precompile(Tuple{typeof(Base.:(*)), Int64, Int32})
# precompile(Tuple{typeof(InMemoryDatasets._check_allocation_limit), Type, Int64, Int64})
# precompile(Tuple{typeof(Base.:(/)), Int64, UInt64})
# precompile(Tuple{typeof(Base.:(<)), Float64, Float64})
# precompile(Tuple{Type{Base.Generator{I, F} where F where I}, InMemoryDatasets.var"#542#543"{Base.Missing, InMemoryDatasets.GroupBy, Array{String, 1}, Union}, Base.UnitRange{Int64}})
# precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, InMemoryDatasets.var"#542#543"{Base.Missing, InMemoryDatasets.GroupBy, Array{String, 1}, Union}}})
# precompile(Tuple{typeof(Base.fill!), Array{Union{Base.Missing, Float64}, 1}, Base.Missing})
# precompile(Tuple{typeof(Base._array_for), Type{Array{Union{Base.Missing, Float64}, 1}}, Base.UnitRange{Int64}, Base.HasShape{1}})
# precompile(Tuple{typeof(Base.collect_to_with_first!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Array{Union{Base.Missing, Float64}, 1}, Base.Generator{Base.UnitRange{Int64}, InMemoryDatasets.var"#542#543"{Base.Missing, InMemoryDatasets.GroupBy, Array{String, 1}, Union}}, Int64})
# precompile(Tuple{typeof(InMemoryDatasets.update_outputmat!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Bool})
# precompile(Tuple{InMemoryDatasets.var"#1428#threadsfor_fun#539"{Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Int64, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{InMemoryDatasets.var"#1428#threadsfor_fun#539"{Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Array{Union{Base.Missing, Float64}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Int64, Int64, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(Base.view), Array{Int32, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}})
# precompile(Tuple{typeof(InMemoryDatasets._fill_gcol!), Array{AbstractArray{T, N} where N where T, 1}, InMemoryDatasets.Dataset, Array{Int64, 1}, Array{Int64, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}, Int32, Bool})
# precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Int64}, 1}, Int64})
# precompile(Tuple{typeof(Base.push!), Array{AbstractArray{T, N} where N where T, 1}, Array{Union{Base.Missing, Int64}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets._fill_onecol_for_tr_threaded!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}})
# precompile(Tuple{InMemoryDatasets.var"#1398#threadsfor_fun#537"{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}, Base.UnitRange{Int64}}})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, Int64}, 1}, Int64, Bool})
# precompile(Tuple{Type{Base.Pair{Int64, typeof(Base.identity)}}, Any, Any})
# precompile(Tuple{typeof(InMemoryDatasets.setformat!), InMemoryDatasets.Dataset, Base.Pair{Int64, typeof(Base.identity)}})
# precompile(Tuple{Type{PooledArrays.PooledArray{T, R, N, RA} where RA where N where R<:Integer where T}, Array{String, 1}})
# precompile(Tuple{typeof(PooledArrays._label), Array{String, 1}, Type{String}, Type{UInt32}})
# precompile(Tuple{Type{PooledArrays.RefArray{R} where R}, Array{UInt32, 1}})
# precompile(Tuple{Type{PooledArrays.PooledArray{T, R, N, RA} where RA where N where R<:Integer where T}, PooledArrays.RefArray{Array{UInt32, 1}}, Base.Dict{String, UInt32}, Array{String, 1}})
# precompile(Tuple{typeof(Base.getproperty), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Symbol})
# precompile(Tuple{typeof(Base.repeat), Array{UInt32, 1}, Int32})
# precompile(Tuple{typeof(Base.setproperty!), PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}, Symbol, Array{UInt32, 1}})
# precompile(Tuple{typeof(Base.convert), Type{Array{UInt32, 1}}, Array{UInt32, 1}})
# precompile(Tuple{Type{Base.Pair{A, B} where B where A}, Symbol, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
# precompile(Tuple{InMemoryDatasets.var"#insertcols!##kw", NamedTuple{(:unsupported_copy_cols,), Tuple{Bool}}, typeof(InMemoryDatasets.insertcols!), InMemoryDatasets.Dataset, Int64, Base.Pair{Symbol, PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}}})
# precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:copycols,), Tuple{Bool}}, Type{InMemoryDatasets.Dataset}, Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Array{String, 1}})
# precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Float64}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, Float64}, 1}, Int64, Bool})
# precompile(Tuple{typeof(InMemoryDatasets._columns), InMemoryDatasets.Dataset})
# precompile(Tuple{typeof(Base.push!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}})
# precompile(Tuple{typeof(InMemoryDatasets.index), InMemoryDatasets.Dataset})
# precompile(Tuple{typeof(Base.merge!), InMemoryDatasets.Index, InMemoryDatasets.Index})
# precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Dates.Millisecond, Int64, Bool})
# precompile(Tuple{typeof(Base.firstindex), Array{Union{Base.Missing, Dates.Millisecond}, 1}})
# precompile(Tuple{typeof(Base.setindex!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Dates.Millisecond}, 1}, Int64})
# precompile(Tuple{typeof(REPL.ends_with_semicolon), AbstractString})
# precompile(Tuple{typeof(Base.Multimedia.display), REPL.REPLDisplay{R} where R<:REPL.AbstractREPL, Any})
# precompile(Tuple{Type{Ref{Any}}, InMemoryDatasets.Dataset})
# precompile(Tuple{typeof(Base.mapfoldl_impl), typeof(Base.identity), Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.IOContext{Base.TTY}, Base.Dict{Symbol, Any}})
# precompile(Tuple{Core.Compiler.var"#256#258"{DataType, Tuple{String}}, Int64})
# precompile(Tuple{Base.Cartesian.var"#@ncall", LineNumberNode, Module, Int64, Any, Vararg{Any, N} where N})
# precompile(Tuple{typeof(Base.show), Base.IOContext{Base.TTY}, Base.Multimedia.MIME{Symbol("text/plain")}, InMemoryDatasets.Dataset})
# precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{Union{Base.Missing, String}, UInt32, 1, Array{UInt32, 1}}})
# precompile(Tuple{PooledArrays.var"#1#2", PooledArrays.PooledArray{String, UInt32, 1, Array{UInt32, 1}}})
# precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, String}, 1}})
# precompile(Tuple{typeof(Base.length), Array{Union{Base.Missing, Dates.Millisecond}, 1}})
# precompile(Tuple{Type{InMemoryDatasets.DatasetColumn{T, E} where E where T<:InMemoryDatasets.AbstractDataset}, Int64, InMemoryDatasets.Dataset, Array{Union{Base.Missing, String}, 1}})
# precompile(Tuple{Type{InMemoryDatasets.DatasetColumn{T, E} where E where T<:InMemoryDatasets.AbstractDataset}, Int64, InMemoryDatasets.Dataset, Array{Union{Base.Missing, Dates.Millisecond}, 1}})
# precompile(Tuple{Base.var"#4#5"{InMemoryDatasets.var"#660#662"{Base.Dict{Any, String}}}, Tuple{Union, Int64}})
# precompile(Tuple{InMemoryDatasets.var"#660#662"{Base.Dict{Any, String}}, Type, Int64})
# precompile(Tuple{typeof(Base.get!), InMemoryDatasets.var"#661#663"{Union, Int64}, Base.Dict{Any, String}, Type{Union{Base.Missing, String}}})
# precompile(Tuple{typeof(Base.show), Base.GenericIOBuffer{Array{UInt8, 1}}, Type})
# precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Type})
# precompile(Tuple{typeof(Base.get!), InMemoryDatasets.var"#661#663"{Union, Int64}, Base.Dict{Any, String}, Type{Union{Base.Missing, Dates.Millisecond}}})
# precompile(Tuple{typeof(Base.nameof), DataType})
# precompile(Tuple{Type{NamedTuple{(:alignment, :alignment_anchor_fallback, :alignment_anchor_regex, :body_hlines, :compact_printing, :crop, :crop_num_lines_at_beginning, :ellipsis_line_skip, :formatters, :header, :header_alignment, :hlines, :highlighters, :maximum_columns_width, :newline_at_end, :nosubheader, :row_name_alignment, :row_name_crayon, :row_name_column_title, :row_names, :row_number_alignment, :row_number_column_title, :show_row_number, :title, :vlines), T} where T<:Tuple}, Tuple{Array{Symbol, 1}, Symbol, Base.Dict{Int64, Array{Base.Regex, 1}}, Array{Int64, 1}, Bool, Symbol, Int64, Int64, Tuple{}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}, Symbol, Array{Symbol, 1}, Tuple{PrettyTables.Highlighter}, Array{Int64, 1}, Bool, Bool, Symbol, Crayons.Crayon, String, Nothing, Symbol, String, Bool, String, Array{Int64, 1}}})
# precompile(Tuple{typeof(Base.afoldl), Base.var"#42#43", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
# precompile(Tuple{typeof(Base.afoldl), Base.var"#42#43", Type, Type, Type, Type, Type, Type, Type, Type, Type, Type, Type})
# precompile(Tuple{Base.var"##s79#169", Any, Any, Any, Any, Any})
# precompile(Tuple{typeof(Base.merge_types), Tuple{Vararg{Symbol, N} where N}, Type{var"#s79"} where var"#s79"<:(NamedTuple{names, T} where T<:Tuple where names), Type{var"#s78"} where var"#s78"<:(NamedTuple{names, T} where T<:Tuple where names)})
# precompile(Tuple{typeof(Base.afoldl), Base.var"#42#43", Type, Type, Type, Type, Type, Type, Type, Type})
# precompile(Tuple{PrettyTables.var"#pretty_table##kw", NamedTuple{(:alignment, :alignment_anchor_fallback, :alignment_anchor_regex, :body_hlines, :compact_printing, :crop, :crop_num_lines_at_beginning, :ellipsis_line_skip, :formatters, :header, :header_alignment, :hlines, :highlighters, :maximum_columns_width, :newline_at_end, :nosubheader, :row_name_alignment, :row_name_crayon, :row_name_column_title, :row_names, :row_number_alignment, :row_number_column_title, :show_row_number, :title, :vlines), Tuple{Array{Symbol, 1}, Symbol, Base.Dict{Int64, Array{Base.Regex, 1}}, Array{Int64, 1}, Bool, Symbol, Int64, Int64, Tuple{}, Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}, Symbol, Array{Symbol, 1}, Tuple{PrettyTables.Highlighter}, Array{Int64, 1}, Bool, Bool, Symbol, Crayons.Crayon, String, Nothing, Symbol, String, Bool, String, Array{Int64, 1}}}, typeof(PrettyTables.pretty_table), Base.IOContext{Base.TTY}, InMemoryDatasets.Dataset})
# precompile(Tuple{PrettyTables.var"##_pretty_table#73", Tuple{Array{String, 1}, Array{String, 1}, Array{String, 1}}, Base.Iterators.Pairs{Symbol, Any, Tuple{Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol, Symbol}, NamedTuple{(:alignment, :alignment_anchor_fallback, :alignment_anchor_regex, :body_hlines, :compact_printing, :crop, :crop_num_lines_at_beginning, :ellipsis_line_skip, :formatters, :header_alignment, :hlines, :highlighters, :maximum_columns_width, :newline_at_end, :nosubheader, :row_name_alignment, :row_name_crayon, :row_name_column_title, :row_names, :row_number_alignment, :row_number_column_title, :show_row_number, :title, :vlines), Tuple{Array{Symbol, 1}, Symbol, Base.Dict{Int64, Array{Base.Regex, 1}}, Array{Int64, 1}, Bool, Symbol, Int64, Int64, Tuple{}, Symbol, Array{Symbol, 1}, Tuple{PrettyTables.Highlighter}, Array{Int64, 1}, Bool, Bool, Symbol, Crayons.Crayon, String, Nothing, Symbol, String, Bool, String, Array{Int64, 1}}}}, typeof(PrettyTables._pretty_table), IO, InMemoryDatasets.Dataset})
# precompile(Tuple{typeof(Base.length), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, String}, 1}}})
# precompile(Tuple{typeof(Base.get), Base.IOContext{Base.TTY}, Symbol, Bool})
# precompile(Tuple{typeof(PrettyTables._compute_cell_alignment_override), PrettyTables.ColumnTable, Array{Int64, 1}, Array{Int64, 1}, Int64, Int64, Int64, Base.RefValue{Any}})
# precompile(Tuple{typeof(PrettyTables._fill_matrix_data!), Array{String, 2}, Array{Array{String, 1}, 2}, Array{Int64, 1}, Array{Int64, 1}, Array{Int64, 1}, Int64, Any, Any, Ref{Any}, PrettyTables.Display, Bool, Bool, Array{Int64, 1}, Bool, Bool, Bool, Bool, Bool, Base.Val{:print}, Symbol})
# precompile(Tuple{typeof(Base.isassigned), Array{String, 1}, Int64})
# precompile(Tuple{PrettyTables.var"#_parse_cell_text##kw", NamedTuple{(:autowrap, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, Bool, Int64, Bool, Bool, Bool, Bool, Base.Val{:print}}}, typeof(PrettyTables._parse_cell_text), String})
# precompile(Tuple{Base.var"##sprint#385", Nothing, Int64, typeof(Base.sprint), Function, String, Vararg{String, N} where N})
# precompile(Tuple{typeof(Base.convert), Type{Array{String, 1}}, Array{String, 1}})
# precompile(Tuple{typeof(Base.isassigned), PrettyTables.ColumnTable, Int64, Int64})
# precompile(Tuple{typeof(InMemoryDatasets.Tables.getcolumn), InMemoryDatasets.DatasetColumns{InMemoryDatasets.Dataset}, Symbol})
# precompile(Tuple{typeof(Base.isassigned), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, String}, 1}}, Int64})
# precompile(Tuple{typeof(Base.getindex), PrettyTables.ColumnTable, Int64, Int64})
# precompile(Tuple{typeof(Base.getindex), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, String}, 1}}, Int64})
# precompile(Tuple{PrettyTables.var"#_parse_cell_text##kw", NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Base.Val{:print}}}, typeof(PrettyTables._parse_cell_text), String})
# precompile(Tuple{typeof(Base.isassigned), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, Dates.Millisecond}, 1}}, Int64})
# precompile(Tuple{typeof(Base.getindex), InMemoryDatasets.DatasetColumn{InMemoryDatasets.Dataset, Array{Union{Base.Missing, Dates.Millisecond}, 1}}, Int64})
# precompile(Tuple{PrettyTables.var"#_parse_cell_text##kw", NamedTuple{(:autowrap, :cell_data_type, :cell_first_line_only, :column_width, :compact_printing, :has_color, :limit_printing, :linebreaks, :renderer), Tuple{Bool, DataType, Bool, Int64, Bool, Bool, Bool, Bool, Base.Val{:print}}}, typeof(PrettyTables._parse_cell_text), Dates.Millisecond})
# precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.TTY, Base.Pair{Symbol, Bool}, Base.Pair{Symbol, Bool}})
# precompile(Tuple{Type{NamedTuple{(:context,), T} where T<:Tuple}, Tuple{Base.IOContext{Base.TTY}}})
# precompile(Tuple{Base.var"#sprint##kw", NamedTuple{(:context,), Tuple{Base.IOContext{Base.TTY}}}, typeof(Base.sprint), Function, Dates.Millisecond})
# precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Dates.Millisecond})
# precompile(Tuple{typeof(Base.ht_keyindex), Base.Dict{Int64, Array{Base.Regex, 1}}, Int64})
# precompile(Tuple{typeof(Base.copyto!), Array{Int64, 1}, Base.KeySet{Int64, Base.Dict{Int64, Array{Base.Regex, 1}}}})
# precompile(Tuple{typeof(Base._replace!), Base.var"#new#295"{Tuple{Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}}}, Array{Any, 1}, Array{Symbol, 1}, Int64})
# precompile(Tuple{typeof(Base._typed_vcat!), Array{Any, 1}, Tuple{Array{Any, 1}, Array{Int64, 1}}})
# precompile(Tuple{typeof(Base.in), Int64, Base.Set{Any}})
# precompile(Tuple{typeof(Base.push!), Base.Set{Any}, Int64})
# precompile(Tuple{typeof(Base._replace!), Base.var"#new#295"{Tuple{Base.Pair{Symbol, Int64}, Base.Pair{Symbol, Int64}}}, Array{Int64, 1}, Array{Int64, 1}, Int64})
# precompile(Tuple{typeof(Base.print), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Crayons.Crayon})
# precompile(Tuple{typeof(PrettyTables._print_table_header!), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, PrettyTables.Display, Any, Array{String, 2}, Array{Int64, 1}, Array{Int64, 1}, Int64, Int64, Array{Int64, 1}, Array{Int64, 1}, Array{Symbol, 1}, Array{Symbol, 1}, Ref{Any}, Bool, Bool, PrettyTables.TextFormat, Crayons.Crayon, Array{Crayons.Crayon, 1}, Array{Crayons.Crayon, 1}, Crayons.Crayon, Crayons.Crayon})
# precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Crayons.Crayon, String, Vararg{Any, N} where N})
# precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, Crayons.Crayon})
# precompile(Tuple{typeof(Base.getproperty), PrettyTables.Highlighter, Symbol})
# precompile(Tuple{typeof(InMemoryDatasets._pretty_tables_highlighter_func), InMemoryDatasets.Dataset, Int64, Int64})
# precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, String}, 1}, Int64})
# precompile(Tuple{typeof(Base.getindex), Array{Union{Base.Missing, Dates.Millisecond}, 1}, Int64})
# precompile(Tuple{typeof(PrettyTables._flush_buffer!), Base.IOContext{Base.TTY}, Base.GenericIOBuffer{Array{UInt8, 1}}, Bool, Bool, Int64})

function _precompile()
    VERSION >= v"1.8" || return nothing

        Base.precompile(Tuple{typeof(vcat),Dataset,Dataset})
        Base.precompile(Tuple{typeof(unique),Dataset,Int64})
        Base.precompile(Tuple{typeof(sortperm),Dataset,Int64})
        Base.precompile(Tuple{typeof(combine),GatherBy,Any,Vararg{Any}})
        Base.precompile(Tuple{typeof(sortperm),Dataset,UnitRange{Int64}})
        Base.precompile(Tuple{typeof(show),IOBuffer,MIME{Symbol("text/html")},Dataset})

        Base.precompile(Tuple{Core.kwftype(typeof(sortperm)),NamedTuple{(:alg,), Tuple{QuickSortAlg}},typeof(sortperm),Dataset,Int64})
        Base.precompile(Tuple{Core.kwftype(typeof(leftjoin)),NamedTuple{(:on, :threads), Tuple{Vector{Symbol}, Bool}},typeof(leftjoin),Dataset,Dataset})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :makeunique, :stable, :threads), Tuple{Vector{Pair{Symbol, Tuple{Symbol, Nothing}}}, Bool, Bool, Bool}},typeof(innerjoin),Dataset,SubDataset{Dataset, SubIndex{Index, Base.OneTo{Int64}, Vector{Int64}}, Base.OneTo{Int64}}})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :threads), Tuple{Vector{Symbol}, Bool}},typeof(innerjoin),Dataset,Dataset})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :stable, :threads), Tuple{Vector{Pair{Symbol, Any}}, Bool, Bool}},typeof(innerjoin),Dataset,Dataset})
        Base.precompile(Tuple{Core.kwftype(typeof(innerjoin)),NamedTuple{(:on, :stable, :threads), Tuple{Vector{Pair{Symbol, Any}}, Bool, Bool}},typeof(innerjoin),SubDataset{Dataset, SubIndex{Index, Base.OneTo{Int64}, Vector{Int64}}, Base.OneTo{Int64}},Dataset})
        Base.precompile(Tuple{Core.kwftype(typeof(closejoin)),NamedTuple{(:on,), Tuple{Symbol}},typeof(closejoin),Dataset,Dataset})
        Base.precompile(Tuple{Core.kwftype(typeof(closejoin)),NamedTuple{(:on,), Tuple{Vector{Symbol}}},typeof(closejoin),SubDataset{Dataset, SubIndex{Index, Base.OneTo{Int64}, Vector{Int64}}, Base.OneTo{Int64}},SubDataset{Dataset, SubIndex{Index, Base.OneTo{Int64}, Vector{Int64}}, Base.OneTo{Int64}}})
        Base.precompile(Tuple{Core.kwftype(typeof(closejoin)),NamedTuple{(:on,), Tuple{Vector{Symbol}}},typeof(closejoin),Dataset,SubDataset{Dataset, SubIndex{Index, Vector{Int64}, Vector{Int64}}, UnitRange{Int64}}})
        Base.precompile(Tuple{Core.kwftype(typeof(_join_inner)),NamedTuple{(:onleft, :onright, :onright_range, :makeunique, :mapformats, :stable, :alg, :check, :accelerate, :droprangecols, :strict_inequality, :method, :threads, :multiple_match, :multiple_match_name, :obs_id, :obs_id_name), Tuple{Vector{Int64}, Vector{Int64}, Tuple{Nothing, Symbol}, Bool, Vector{Bool}, Bool, HeapSortAlg, Bool, Bool, Bool, Vector{Bool}, Symbol, Bool, Bool, Symbol, Vector{Bool}, Symbol}},typeof(_join_inner),SubDataset{Dataset, SubIndex{Index, Base.OneTo{Int64}, Vector{Int64}}, Base.OneTo{Int64}},Dataset,Val{Int32}})

        Base.precompile(Tuple{Core.kwftype(typeof(sort)),NamedTuple{(:stable, :alg), Tuple{Bool, QuickSortAlg}},typeof(sort),Dataset,Vector{Int64}})
        Base.precompile(Tuple{Core.kwftype(typeof(Type)),NamedTuple{(:x1, :x2, :x3, :x4, :x5, :x6, :x7, :x8, :x9, :x10), Tuple{Vector{Int64}, Vector{Int64}, Vector{Float64}, Vector{Date}, String, PooledVector{Characters{5}, UInt32, Vector{UInt32}}, Vector{Int32}, Vector{Float32}, PooledVector{Characters{3}, UInt32, Vector{UInt32}}, PooledVector{Characters{12}, UInt32, Vector{UInt32}}}},Type{Dataset}})
        Base.precompile(Tuple{Core.kwftype(typeof(byrow)),NamedTuple{(:threads,), Tuple{Bool}},typeof(byrow),Dataset,typeof(Base.argmin),Regex})
        Base.precompile(Tuple{Core.kwftype(typeof(byrow)),NamedTuple{(:threads,), Tuple{Bool}},typeof(byrow),Dataset,typeof(Base.sum)})
        Base.precompile(Tuple{Core.kwftype(typeof(combine)),NamedTuple{(:threads,), Tuple{Bool}},typeof(combine),GatherBy,Any})
        Base.precompile(Tuple{Core.kwftype(typeof(combine)),NamedTuple{(:threads,), Tuple{Bool}},typeof(combine),GroupBy,Any})
        Base.precompile(Tuple{Core.kwftype(typeof(gatherby)),NamedTuple{(:threads,), Tuple{Bool}},typeof(gatherby),Dataset,Int64})
        Base.precompile(Tuple{Core.kwftype(typeof(transpose)),NamedTuple{(:id, :threads), Tuple{Symbol, Bool}},typeof(transpose),GroupBy,Symbol})
        Base.precompile(Tuple{Core.kwftype(typeof(transpose)),NamedTuple{(:id, :threads), Tuple{Symbol, Bool}},typeof(transpose),Dataset,Vector{Symbol}})
        Base.precompile(Tuple{Core.kwftype(typeof(transpose)),NamedTuple{(:threads,), Tuple{Bool}},typeof(transpose),Dataset,UnitRange{Int64}})
        Base.precompile(Tuple{Core.kwftype(typeof(transpose)),NamedTuple{(:threads,), Tuple{Bool}},typeof(transpose),GroupBy,Vector{Int64}})

        isdefined(InMemoryDatasets, Symbol("##Dataset#270")) && precompile(Tuple{InMemoryDatasets.var"##Dataset#270", Bool, Type{InMemoryDatasets.Dataset}, Pair{String, Array{String, 1}}, Vararg{Pair{String, Array{String, 1}}}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Char}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Float32}, 1}, Int64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Float32}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Float64}, 1}, Int64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Float64}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, String}, 1}, Int64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, String}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(InMemoryDatasets._date_value), Array{Union{Base.Missing, String}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(InMemoryDatasets._date_value), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Int32, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(InMemoryDatasets._date_value), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Float64}, Union{Base.Missing, Float64}, Union{Base.Missing, Float64}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}}, Int64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_create_dictionary!#74")) && precompile(Tuple{InMemoryDatasets.var"##_create_dictionary!#74", Bool, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Union{Base.Missing, String}, 1}}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##_divide_for_fast_join_barrier!#57")) && precompile(Tuple{InMemoryDatasets.var"##_divide_for_fast_join_barrier!#57", Bool, typeof(InMemoryDatasets._divide_for_fast_join_barrier!), Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.identity), Base.Val{UInt16}})
        isdefined(InMemoryDatasets, Symbol("##_divide_for_fast_join_barrier!#57")) && precompile(Tuple{InMemoryDatasets.var"##_divide_for_fast_join_barrier!#57", Bool, typeof(InMemoryDatasets._divide_for_fast_join_barrier!), Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, String}, 1}, typeof(Base.identity), Base.Val{UInt16}})
        isdefined(InMemoryDatasets, Symbol("##_fill_range_for_accelerated_join!#1315")) && precompile(Tuple{InMemoryDatasets.var"##_fill_range_for_accelerated_join!#1315", Bool, typeof(InMemoryDatasets._fill_range_for_accelerated_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.identity), Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("##_fill_range_for_accelerated_join!#1315")) && precompile(Tuple{InMemoryDatasets.var"##_fill_range_for_accelerated_join!#1315", Bool, typeof(InMemoryDatasets._fill_range_for_accelerated_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, String}, 1}, typeof(Base.identity), Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("##_fill_range_for_accelerated_join!#1315")) && precompile(Tuple{InMemoryDatasets.var"##_fill_range_for_accelerated_join!#1315", Bool, typeof(InMemoryDatasets._fill_range_for_accelerated_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Array{Bool, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, typeof(Base.identity), Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("##_fill_ranges_for_dict_join!#1396")) && precompile(Tuple{InMemoryDatasets.var"##_fill_ranges_for_dict_join!#1396", Bool, typeof(InMemoryDatasets._fill_ranges_for_dict_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Int64, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, typeof(identity), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("##_fill_ranges_for_dict_join!#1396")) && precompile(Tuple{InMemoryDatasets.var"##_fill_ranges_for_dict_join!#1396", Bool, typeof(InMemoryDatasets._fill_ranges_for_dict_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Int64, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, typeof(identity), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("##_generate_col_row_names#1261")) && precompile(Tuple{InMemoryDatasets.var"##_generate_col_row_names#1261", Int64, typeof(InMemoryDatasets._generate_col_row_names), typeof(InMemoryDatasets._default_renamecolid_function_withid), typeof(identity), Array{Char, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("##_generate_col_row_names#1261")) && precompile(Tuple{InMemoryDatasets.var"##_generate_col_row_names#1261", Int64, typeof(InMemoryDatasets._generate_col_row_names), typeof(InMemoryDatasets._default_renamecolid_function_withid), typeof(identity), Array{Int64, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("##_generate_col_row_names#1261")) && precompile(Tuple{InMemoryDatasets.var"##_generate_col_row_names#1261", Int64, typeof(InMemoryDatasets._generate_col_row_names), typeof(InMemoryDatasets._default_renamecolid_function_withid), typeof(identity), Array{NamedTuple{(:x1, :x2), Tuple{Union{Base.Missing, Int64}, Union{Base.Missing, String}}}, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("##_generate_col_row_names#1261")) && precompile(Tuple{InMemoryDatasets.var"##_generate_col_row_names#1261", Int64, typeof(InMemoryDatasets._generate_col_row_names), typeof(InMemoryDatasets._default_renamecolid_function_withid), typeof(identity), Array{NamedTuple{(:x1, :x2), Tuple{Union{Base.Missing, String}, Union{Base.Missing, Int64}}}, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("##_generate_col_row_names#1261")) && precompile(Tuple{InMemoryDatasets.var"##_generate_col_row_names#1261", Int64, typeof(InMemoryDatasets._generate_col_row_names), typeof(InMemoryDatasets._default_renamecolid_function_withid), typeof(identity), Array{String, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("##ds_sort_perm#1142")) && precompile(Tuple{InMemoryDatasets.var"##ds_sort_perm#1142", Int64, Bool, Bool, InMemoryDatasets.GIVENRANGE, Bool, typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.Dataset, Array{Int64, 1}, Array{Function, 1}, Array{Bool, 1}, InMemoryDatasets.HeapSortAlg, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##ds_sort_perm#1142")) && precompile(Tuple{InMemoryDatasets.var"##ds_sort_perm#1142", Int64, Bool, Bool, Nothing, Bool, typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.Dataset, Array{Int64, 1}, Array{Function, 1}, Array{Bool, 1}, Base.Sort.QuickSortAlg, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##ds_sort_perm#1142")) && precompile(Tuple{InMemoryDatasets.var"##ds_sort_perm#1142", Int64, Bool, Bool, Nothing, Bool, typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.Dataset, Array{Int64, 1}, Array{Function, 1}, Array{Bool, 1}, InMemoryDatasets.HeapSortAlg, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##ds_sort_perm#1142")) && precompile(Tuple{InMemoryDatasets.var"##ds_sort_perm#1142", Int64, Bool, Bool, Nothing, Bool, typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.Dataset, Base.OneTo{Int64}, Array{Function, 1}, Array{Bool, 1}, Base.Sort.QuickSortAlg, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##ds_sort_perm#1142")) && precompile(Tuple{InMemoryDatasets.var"##ds_sort_perm#1142", Int64, Bool, Bool, Nothing, Bool, typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.Dataset, Base.OneTo{Int64}, Array{Function, 1}, Array{Bool, 1}, InMemoryDatasets.HeapSortAlg, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##ds_sort_perm#1142")) && precompile(Tuple{InMemoryDatasets.var"##ds_sort_perm#1142", Int64, Bool, Bool, Nothing, Bool, typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.Dataset, Base.UnitRange{Int64}, Array{Function, 1}, Array{Bool, 1}, InMemoryDatasets.HeapSortAlg, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("##ds_sort_perm#1142")) && precompile(Tuple{InMemoryDatasets.var"##ds_sort_perm#1142", Int64, Bool, Bool, Nothing, Bool, typeof(InMemoryDatasets.ds_sort_perm), InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Base.OneTo{Int64}, Array{Int64, 1}}, Base.OneTo{Int64}}, Array{Int64, 1}, Array{Function, 1}, Array{Bool, 1}, InMemoryDatasets.HeapSortAlg, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Dates.Date}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, InMemoryDatasets.Characters{12}}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, InMemoryDatasets.Characters{3}}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, InMemoryDatasets.Characters{5}}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_apply_by##kw")) && precompile(Tuple{InMemoryDatasets.var"#_apply_by##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._apply_by), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Array{Int32, 1}, typeof(identity), Bool})
        isdefined(InMemoryDatasets, Symbol("#_change_refpool_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_change_refpool_find_range_for_join!##kw", NamedTuple{(:nsfpaj, :threads), Tuple{Bool, Bool}}, typeof(InMemoryDatasets._change_refpool_find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, InMemoryDatasets.Dataset, InMemoryDatasets.Dataset, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Bool, Bool, Int64})
        isdefined(InMemoryDatasets, Symbol("#_change_refpool_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_change_refpool_find_range_for_join!##kw", NamedTuple{(:nsfpaj, :threads), Tuple{Bool, Bool}}, typeof(InMemoryDatasets._change_refpool_find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Base.OneTo{Int64}, Array{Int64, 1}}, Base.OneTo{Int64}}, InMemoryDatasets.Dataset, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Bool, Bool, Int64})
        isdefined(InMemoryDatasets, Symbol("#_change_refpool_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_change_refpool_find_range_for_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._change_refpool_find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, InMemoryDatasets.Dataset, InMemoryDatasets.Dataset, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Bool, Bool, Int64})
        isdefined(InMemoryDatasets, Symbol("#_change_refpool_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_change_refpool_find_range_for_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._change_refpool_find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, InMemoryDatasets.Dataset, InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Base.StepRange{Int64, Int64}, Array{Int64, 1}}, Array{Int64, 1}}, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Bool, Bool, Int64})
        isdefined(InMemoryDatasets, Symbol("#_change_refpool_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_change_refpool_find_range_for_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._change_refpool_find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Array{Int64, 1}, Array{Int64, 1}}, Base.OneTo{Int64}}, InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Array{Int64, 1}, Array{Int64, 1}}, Base.OneTo{Int64}}, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Bool, Bool, Int64})
        isdefined(InMemoryDatasets, Symbol("#_change_refpool_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_change_refpool_find_range_for_join!##kw", NamedTuple{(:type, :nsfpaj, :threads), Tuple{Symbol, Bool, Bool}}, typeof(InMemoryDatasets._change_refpool_find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, InMemoryDatasets.Dataset, InMemoryDatasets.Dataset, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Bool, Bool, Int64})
        isdefined(InMemoryDatasets, Symbol("#_change_refpool_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_change_refpool_find_range_for_join!##kw", NamedTuple{(:type, :nsfpaj, :threads), Tuple{Symbol, Bool, Bool}}, typeof(InMemoryDatasets._change_refpool_find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, InMemoryDatasets.Dataset, InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Base.OneTo{Int64}, Array{Int64, 1}}, Base.OneTo{Int64}}, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Bool, Bool, Int64})
        isdefined(InMemoryDatasets, Symbol("#_change_refpool_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_change_refpool_find_range_for_join!##kw", NamedTuple{(:type, :nsfpaj, :threads), Tuple{Symbol, Bool, Bool}}, typeof(InMemoryDatasets._change_refpool_find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Base.OneTo{Int64}, Array{Int64, 1}}, Base.OneTo{Int64}}, InMemoryDatasets.Dataset, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Bool, Bool, Int64})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Array{Union{Base.Missing, Char}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Array{Union{Base.Missing, Float32}, 1}, Int64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Array{Union{Base.Missing, Float32}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Array{Union{Base.Missing, Float64}, 1}, Int64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Array{Union{Base.Missing, Float64}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Array{Union{Base.Missing, String}, 1}, Int64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Array{Union{Base.Missing, String}, 1}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Int32, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Float64}, Union{Base.Missing, Float64}, Union{Base.Missing, Float64}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}}, Int64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_create_dictionary!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_create_dictionary!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._create_dictionary!), Array{Int32, 1}, Array{Int32, 1}, Array{Int32, 1}, Array{UInt64, 1}, typeof(identity), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Union{Base.Missing, String}, 1}}, UInt64, Bool, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_divide_for_fast_join##kw")) && precompile(Tuple{InMemoryDatasets.var"#_divide_for_fast_join##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._divide_for_fast_join), Array{Union{Base.Missing, Int64}, 1}, typeof(identity), Int64})
        isdefined(InMemoryDatasets, Symbol("#_divide_for_fast_join##kw")) && precompile(Tuple{InMemoryDatasets.var"#_divide_for_fast_join##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._divide_for_fast_join), Array{Union{Base.Missing, String}, 1}, typeof(identity), Int64})
        isdefined(InMemoryDatasets, Symbol("#_divide_for_fast_join_barrier!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_divide_for_fast_join_barrier!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._divide_for_fast_join_barrier!), Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(identity), Base.Val{UInt16}})
        isdefined(InMemoryDatasets, Symbol("#_divide_for_fast_join_barrier!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_divide_for_fast_join_barrier!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._divide_for_fast_join_barrier!), Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, String}, 1}, typeof(identity), Base.Val{UInt16}})
        isdefined(InMemoryDatasets, Symbol("#_fast_path_modify_to_integer!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fast_path_modify_to_integer!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fast_path_modify_to_integer!), Array{UInt32, 1}, Array{Int32, 1}})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Array{Bool, 1}, Array{Int32, 1}, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Dates.Date}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Array{Bool, 1}, Array{Int32, 1}, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Dates.Date}, 1}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Array{Bool, 1}, Array{Int32, 1}, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Array{Bool, 1}, Array{Int32, 1}, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{UInt32, 1}, Array{UInt32, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Dates.Date}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Dates.Date}, 1}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{UInt32, 1}, Array{UInt32, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Dates.Date}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_inner!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_left!), Array{UInt32, 1}, Array{UInt32, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_left!), Array{Union{Base.Missing, Dates.Date}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_left!), Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_left!), Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_left!), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_left!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_left!), Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_oncols_left_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_oncols_left_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_oncols_left_table_left!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_outputmat_withid##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_outputmat_withid##kw", NamedTuple{(:default_fill,), Tuple{Base.Missing}}, typeof(InMemoryDatasets._fill_outputmat_withid), Type, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, InMemoryDatasets.GroupBy, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Array{Int32, 1}, Array{String, 1}, Int64, Bool})
        isdefined(InMemoryDatasets, Symbol("#_fill_outputmat_withoutid##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_outputmat_withoutid##kw", NamedTuple{(:default_fill,), Tuple{Base.Missing}}, typeof(InMemoryDatasets._fill_outputmat_withoutid), Type, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, InMemoryDatasets.GroupBy, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Array{String, 1}, Int64, Bool})
        isdefined(InMemoryDatasets, Symbol("#_fill_range_for_accelerated_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_range_for_accelerated_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_range_for_accelerated_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(identity), Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_range_for_accelerated_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_range_for_accelerated_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_range_for_accelerated_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, String}, 1}, typeof(identity), Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_range_for_accelerated_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_range_for_accelerated_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_range_for_accelerated_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Array{Bool, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, typeof(identity), Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_ranges_for_dict_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_ranges_for_dict_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_ranges_for_dict_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Int64, typeof(identity), typeof(identity), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_ranges_for_dict_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_ranges_for_dict_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_ranges_for_dict_join!), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Int64, typeof(identity), typeof(identity), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Array{Bool, 1}, Array{Int32, 1}, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Dates.Date}, 1}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Dates.Date}, 1}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Array{Int64, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Float64}, 1}, Base.SubArray{Union{Base.Missing, Float64}, 1, Array{Union{Base.Missing, Float64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Int32}, 1}, Base.SubArray{Union{Base.Missing, Int32}, 1, Array{Union{Base.Missing, Int32}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int64, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:inbits, :en2, :threads), Tuple{Nothing, Nothing, Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_inner!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_inner!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_inner!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_left!), Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_left!), Array{Union{Base.Missing, Float64}, 1}, Base.SubArray{Union{Base.Missing, Float64}, 1, Array{Union{Base.Missing, Float64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_left!), Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_left!), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_left!), Array{Union{Base.Missing, Int32}, 1}, Base.SubArray{Union{Base.Missing, Int32}, 1, Array{Union{Base.Missing, Int32}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_left!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_left!), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_right_cols_table_left!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_right_cols_table_left!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_right_cols_table_left!), Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Array{Base.UnitRange{Int32}, 1}, Array{Int64, 1}, Int64, Base.Missing})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{UInt32, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Float32}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Float64}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{12}}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{3}}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{5}}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int32}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int64}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int32, 1}, Array{Bool, 1}, Array{Union{Base.Missing, String}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_fill_starts_v2!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_fill_starts_v2!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._fill_starts_v2!), Array{Int64, 1}, Array{Bool, 1}, Array{Union{Base.Missing, Int64}, 1}, Int32, Base.Order.ForwardOrdering, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_find_id_unique_values##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_id_unique_values##kw", NamedTuple{(:mapformats,), Tuple{Bool}}, typeof(InMemoryDatasets._find_id_unique_values), InMemoryDatasets.Dataset, Array{Int64, 1}, Array{Int32, 1}})
        isdefined(InMemoryDatasets, Symbol("#_find_id_unique_values##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_id_unique_values##kw", NamedTuple{(:mapformats,), Tuple{Bool}}, typeof(InMemoryDatasets._find_id_unique_values), InMemoryDatasets.Dataset, Int64, Array{Int32, 1}})
        isdefined(InMemoryDatasets, Symbol("#_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_range_for_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Array{Int64, 1}, Array{Int32, 1}, Int64, Int32})
        isdefined(InMemoryDatasets, Symbol("#_find_range_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_range_for_join!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._find_range_for_join!), Array{Base.UnitRange{Int32}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Array{Int64, 1}, Array{Int32, 1}, Int64, Int64})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Array{Int32, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, Dates.Date}}, Base.Val{Union{Base.Missing, Dates.Date}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Array{Int64, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, Dates.Date}}, Base.Val{Union{Base.Missing, Dates.Date}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Array{Union{Base.Missing, Float64}, 1}, Base.SubArray{Union{Base.Missing, Float64}, 1, Array{Union{Base.Missing, Float64}, 1}, Tuple{Array{Int32, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, Float64}}, Base.Val{Union{Base.Missing, Float64}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Base.SubArray{Union{Base.Missing, Int32}, 1, Array{Union{Base.Missing, Int32}, 1}, Tuple{Array{Int32, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, Int32}}, Base.Val{Union{Base.Missing, Int32}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, Int64}}, Base.Val{Union{Base.Missing, Int64}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int32, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, String}}, Base.Val{Union{Base.Missing, String}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, String}}, Base.Val{Union{Base.Missing, String}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Base.OneTo{Int64}}, true}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Array{Int32, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, Dates.Date}}, Base.Val{Union{Base.Missing, Dates.Date}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.OneTo{Int64}}, true}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int64, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, Int64}}, Base.Val{Union{Base.Missing, Int64}}})
        isdefined(InMemoryDatasets, Symbol("#_find_ranges_for_join!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_find_ranges_for_join!##kw", NamedTuple{(:type, :threads), Tuple{Symbol, Bool}}, typeof(InMemoryDatasets._find_ranges_for_join!), Array{Base.UnitRange{Int32}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int32, 1}}, false}, typeof(Base.identity), typeof(Base.identity), Base.Val{Union{Base.Missing, String}}, Base.Val{Union{Base.Missing, String}}})
        isdefined(InMemoryDatasets, Symbol("#_generate_col_row_names##kw")) && precompile(Tuple{InMemoryDatasets.var"#_generate_col_row_names##kw", NamedTuple{(:max_length,), Tuple{Int64}}, typeof(InMemoryDatasets._generate_col_row_names), typeof(identity), typeof(identity), Array{Char, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("#_generate_col_row_names##kw")) && precompile(Tuple{InMemoryDatasets.var"#_generate_col_row_names##kw", NamedTuple{(:max_length,), Tuple{Int64}}, typeof(InMemoryDatasets._generate_col_row_names), typeof(identity), typeof(identity), Array{Int64, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("#_generate_col_row_names##kw")) && precompile(Tuple{InMemoryDatasets.var"#_generate_col_row_names##kw", NamedTuple{(:max_length,), Tuple{Int64}}, typeof(InMemoryDatasets._generate_col_row_names), typeof(identity), typeof(identity), Array{NamedTuple{(:x1, :x2), Tuple{Union{Base.Missing, Int64}, Union{Base.Missing, String}}}, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("#_generate_col_row_names##kw")) && precompile(Tuple{InMemoryDatasets.var"#_generate_col_row_names##kw", NamedTuple{(:max_length,), Tuple{Int64}}, typeof(InMemoryDatasets._generate_col_row_names), typeof(identity), typeof(identity), Array{NamedTuple{(:x1, :x2), Tuple{Union{Base.Missing, String}, Union{Base.Missing, Int64}}}, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("#_generate_col_row_names##kw")) && precompile(Tuple{InMemoryDatasets.var"#_generate_col_row_names##kw", NamedTuple{(:max_length,), Tuple{Int64}}, typeof(InMemoryDatasets._generate_col_row_names), typeof(identity), typeof(identity), Array{String, 1}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("#_generate_col_row_names##kw")) && precompile(Tuple{InMemoryDatasets.var"#_generate_col_row_names##kw", NamedTuple{(:max_length,), Tuple{Int64}}, typeof(InMemoryDatasets._generate_col_row_names), typeof(identity), typeof(identity), Base.UnitRange{Int64}, Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("#_join_inner##kw")) && precompile(Tuple{InMemoryDatasets.var"#_join_inner##kw", NamedTuple{(:onleft, :onright, :onright_range, :makeunique, :mapformats, :stable, :alg, :check, :accelerate, :droprangecols, :strict_inequality, :method, :threads, :multiple_match, :multiple_match_name, :obs_id, :obs_id_name), Tuple{Array{Int64, 1}, Array{Int64, 1}, Tuple{Nothing, Symbol}, Bool, Array{Bool, 1}, Bool, InMemoryDatasets.HeapSortAlg, Bool, Bool, Bool, Array{Bool, 1}, Symbol, Bool, Bool, Symbol, Array{Bool, 1}, Symbol}}, typeof(InMemoryDatasets._join_inner), InMemoryDatasets.Dataset, InMemoryDatasets.Dataset, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_join_inner##kw")) && precompile(Tuple{InMemoryDatasets.var"#_join_inner##kw", NamedTuple{(:onleft, :onright, :onright_range, :makeunique, :mapformats, :stable, :alg, :check, :accelerate, :droprangecols, :strict_inequality, :method, :threads, :multiple_match, :multiple_match_name, :obs_id, :obs_id_name), Tuple{Array{Int64, 1}, Array{Int64, 1}, Tuple{Nothing, Symbol}, Bool, Array{Bool, 1}, Bool, InMemoryDatasets.HeapSortAlg, Bool, Bool, Bool, Array{Bool, 1}, Symbol, Bool, Bool, Symbol, Array{Bool, 1}, Symbol}}, typeof(InMemoryDatasets._join_inner), InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Base.OneTo{Int64}, Array{Int64, 1}}, Base.OneTo{Int64}}, InMemoryDatasets.Dataset, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_join_inner##kw")) && precompile(Tuple{InMemoryDatasets.var"#_join_inner##kw", NamedTuple{(:onleft, :onright, :onright_range, :makeunique, :mapformats, :stable, :alg, :check, :accelerate, :droprangecols, :strict_inequality, :method, :threads, :multiple_match, :multiple_match_name, :obs_id, :obs_id_name), Tuple{Array{Int64, 1}, Array{Int64, 1}, Tuple{Symbol, Symbol}, Bool, Array{Bool, 1}, Bool, InMemoryDatasets.HeapSortAlg, Bool, Bool, Bool, Array{Bool, 1}, Symbol, Bool, Bool, Symbol, Array{Bool, 1}, Symbol}}, typeof(InMemoryDatasets._join_inner), InMemoryDatasets.Dataset, InMemoryDatasets.Dataset, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_join_inner##kw")) && precompile(Tuple{InMemoryDatasets.var"#_join_inner##kw", NamedTuple{(:onleft, :onright, :onright_range, :makeunique, :mapformats, :stable, :alg, :check, :accelerate, :droprangecols, :strict_inequality, :method, :threads, :multiple_match, :multiple_match_name, :obs_id, :obs_id_name), Tuple{Array{Int64, 1}, Array{Int64, 1}, Tuple{Symbol, Symbol}, Bool, Array{Bool, 1}, Bool, InMemoryDatasets.HeapSortAlg, Bool, Bool, Bool, Array{Bool, 1}, Symbol, Bool, Bool, Symbol, Array{Bool, 1}, Symbol}}, typeof(InMemoryDatasets._join_inner), InMemoryDatasets.SubDataset{InMemoryDatasets.Dataset, InMemoryDatasets.SubIndex{InMemoryDatasets.Index, Base.OneTo{Int64}, Array{Int64, 1}}, Base.OneTo{Int64}}, InMemoryDatasets.Dataset, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_mark_lt_part!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_mark_lt_part!##kw", NamedTuple{(:strict, :threads), Tuple{Bool, Bool}}, typeof(InMemoryDatasets._mark_lt_part!), Array{Bool, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, typeof(Base.identity), typeof(Base.identity), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Array{Int64, 1}, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_mark_lt_part!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_mark_lt_part!##kw", NamedTuple{(:strict, :threads), Tuple{Bool, Bool}}, typeof(InMemoryDatasets._mark_lt_part!), Array{Bool, 1}, Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Union{Base.Missing, Dates.Date}, 1}, typeof(Base.identity), typeof(Base.identity), Array{Base.UnitRange{Int32}, 1}, Array{Int32, 1}, Array{Int64, 1}, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#_nonunique_barrier!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_nonunique_barrier!##kw", NamedTuple{(:first,), Tuple{Bool}}, typeof(InMemoryDatasets._nonunique_barrier!), Base.BitArray{1}, Array{Int32, 1}, Base.BitArray{1}})
        isdefined(InMemoryDatasets, Symbol("#_sort_two_sorted_half!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sort_two_sorted_half!##kw", NamedTuple{(:cpy_offset,), Tuple{Int64}}, typeof(InMemoryDatasets._sort_two_sorted_half!), Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, Array{Int32, 1}, Int64, Int64, Int64, Base.Order.ForwardOrdering})
        isdefined(InMemoryDatasets, Symbol("#_sort_two_sorted_half!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sort_two_sorted_half!##kw", NamedTuple{(:cpy_offset,), Tuple{Int64}}, typeof(InMemoryDatasets._sort_two_sorted_half!), Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, Array{Int32, 1}, Int64, Int64, Int64, Base.Order.ForwardOrdering})
        isdefined(InMemoryDatasets, Symbol("#_sort_two_sorted_half!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sort_two_sorted_half!##kw", NamedTuple{(:cpy_offset,), Tuple{Int64}}, typeof(InMemoryDatasets._sort_two_sorted_half!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, Array{Int32, 1}, Int64, Int64, Int64, Base.Order.ForwardOrdering})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_int!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_int!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_int!), Array{Int32, 1}, Array{Int32, 1}, Array{UInt32, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int32, Bool, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_int!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_int!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_int!), Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int32, Bool, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_int!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_int!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_int!), Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Array{Array{Int32, 1}, 1}, Int32, Bool, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_int!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_int!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_int!), Array{Int32, 1}, Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}, Array{Array{Int32, 1}, 1}, Int32, Bool, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_unstable!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_unstable!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_unstable!), Array{Int32, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_unstable!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_unstable!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_unstable!), Array{Int32, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_unstable!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_unstable!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_unstable!), Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_unstable!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_unstable!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_unstable!), Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_sortperm_unstable!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_sortperm_unstable!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._sortperm_unstable!), Array{Int32, 1}, Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_stablise_sort!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_stablise_sort!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._stablise_sort!), Array{Int32, 1}, Array{Int32, 1}, Int32, Base.Sort.QuickSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_stablise_sort!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_stablise_sort!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._stablise_sort!), Array{Int32, 1}, Array{Int32, 1}, Int32, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_stablise_sort!##kw")) && precompile(Tuple{InMemoryDatasets.var"#_stablise_sort!##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._stablise_sort!), Array{Int64, 1}, Array{Int32, 1}, Int32, InMemoryDatasets.HeapSortAlg})
        isdefined(InMemoryDatasets, Symbol("#_threaded_permute##kw")) && precompile(Tuple{InMemoryDatasets.var"#_threaded_permute##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._threaded_permute), Array{UInt32, 1}, Array{Int32, 1}})
        isdefined(InMemoryDatasets, Symbol("#_threaded_permute_for_groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#_threaded_permute_for_groupby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._threaded_permute_for_groupby), Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}})
        isdefined(InMemoryDatasets, Symbol("#_threaded_permute_for_groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#_threaded_permute_for_groupby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._threaded_permute_for_groupby), Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}})
        isdefined(InMemoryDatasets, Symbol("#_threaded_permute_for_groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#_threaded_permute_for_groupby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._threaded_permute_for_groupby), Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}})
        isdefined(InMemoryDatasets, Symbol("#_threaded_permute_for_groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#_threaded_permute_for_groupby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets._threaded_permute_for_groupby), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Dates.Date}, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Float32}, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Float64}, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Int32}, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Int64}, 1}, Int32})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Int64}, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, String}, 1}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Base.OneTo{Int64}}, true}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.OneTo{Int64}}, true}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{12}}, UInt32, 1, Array{UInt32, 1}}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{3}}, UInt32, 1, Array{UInt32, 1}}, Int64})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{5}}, UInt32, 1, Array{UInt32, 1}}, Int32})
        isdefined(InMemoryDatasets, Symbol("#allocatecol##kw")) && precompile(Tuple{InMemoryDatasets.var"#allocatecol##kw", NamedTuple{(:addmissing,), Tuple{Bool}}, typeof(InMemoryDatasets.allocatecol), PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{5}}, UInt32, 1, Array{UInt32, 1}}, Int64})
        isdefined(InMemoryDatasets, Symbol("#byrow##kw")) && precompile(Tuple{InMemoryDatasets.var"#byrow##kw", NamedTuple{(:by, :threads), Tuple{Base.Fix2{typeof(Base.isequal), Int64}, Bool}}, typeof(InMemoryDatasets.byrow), InMemoryDatasets.Dataset, typeof(Base.all), Base.Colon})
        isdefined(InMemoryDatasets, Symbol("#byrow##kw")) && precompile(Tuple{InMemoryDatasets.var"#byrow##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.byrow), InMemoryDatasets.Dataset, typeof(Base.argmin), Base.Regex})
        isdefined(InMemoryDatasets, Symbol("#byrow##kw")) && precompile(Tuple{InMemoryDatasets.var"#byrow##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.byrow), InMemoryDatasets.Dataset, typeof(Base.sum), Array{String, 1}})
        isdefined(InMemoryDatasets, Symbol("#byrow##kw")) && precompile(Tuple{InMemoryDatasets.var"#byrow##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.byrow), InMemoryDatasets.Dataset, typeof(Base.sum)})
        isdefined(InMemoryDatasets, Symbol("#byrow##kw")) && precompile(Tuple{InMemoryDatasets.var"#byrow##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.byrow), InMemoryDatasets.Dataset, typeof(identity), Base.UnitRange{Int64}})
        isdefined(InMemoryDatasets, Symbol("#combine##kw")) && precompile(Tuple{InMemoryDatasets.var"#combine##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.combine), InMemoryDatasets.GatherBy, Int})
        isdefined(InMemoryDatasets, Symbol("#combine##kw")) && precompile(Tuple{InMemoryDatasets.var"#combine##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.combine), InMemoryDatasets.GroupBy, Int})
        isdefined(InMemoryDatasets, Symbol("#compute_indices##kw")) && precompile(Tuple{InMemoryDatasets.var"#compute_indices##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.compute_indices), Array{Int32, 1}, Int64, Base.Val{Int32}})
        isdefined(InMemoryDatasets, Symbol("#ds_transpose##kw")) && precompile(Tuple{InMemoryDatasets.var"#ds_transpose##kw", NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), Tuple{Array{Symbol, 1}, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}}, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Array{Symbol, 1}, Array{Int64, 1}})
        isdefined(InMemoryDatasets, Symbol("#ds_transpose##kw")) && precompile(Tuple{InMemoryDatasets.var"#ds_transpose##kw", NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), Tuple{Array{Symbol, 1}, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}}, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Array{Symbol, 1}, Base.UnitRange{Int64}})
        isdefined(InMemoryDatasets, Symbol("#ds_transpose##kw")) && precompile(Tuple{InMemoryDatasets.var"#ds_transpose##kw", NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), Tuple{Nothing, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}}, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Array{Int64, 1}, Base.UnitRange{Int64}})
        isdefined(InMemoryDatasets, Symbol("#ds_transpose##kw")) && precompile(Tuple{InMemoryDatasets.var"#ds_transpose##kw", NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), Tuple{Nothing, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}}, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Array{Symbol, 1}, Array{Int64, 1}})
        isdefined(InMemoryDatasets, Symbol("#ds_transpose##kw")) && precompile(Tuple{InMemoryDatasets.var"#ds_transpose##kw", NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), Tuple{Symbol, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}}, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Array{Symbol, 1}, Array{Int64, 1}})
        isdefined(InMemoryDatasets, Symbol("#ds_transpose##kw")) && precompile(Tuple{InMemoryDatasets.var"#ds_transpose##kw", NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), Tuple{Symbol, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}}, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Array{Symbol, 1}, Base.UnitRange{Int64}})
        isdefined(InMemoryDatasets, Symbol("#ds_transpose##kw")) && precompile(Tuple{InMemoryDatasets.var"#ds_transpose##kw", NamedTuple{(:id, :renamecolid, :renamerowid, :variable_name, :threads, :default_fill, :mapformats), Tuple{Symbol, Nothing, typeof(InMemoryDatasets._default_renamerowid_function), String, Bool, Base.Missing, Bool}}, typeof(InMemoryDatasets.ds_transpose), InMemoryDatasets.GroupBy, Tuple{Symbol, Symbol}, Array{Int64, 1}})
        isdefined(InMemoryDatasets, Symbol("#duplicates##kw")) && precompile(Tuple{InMemoryDatasets.var"#duplicates##kw", NamedTuple{(:mapformats,), Tuple{Bool}}, typeof(InMemoryDatasets.duplicates), InMemoryDatasets.Dataset, Symbol})
        isdefined(InMemoryDatasets, Symbol("#gatherby##kw")) && precompile(Tuple{InMemoryDatasets.var"#gatherby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.gatherby), InMemoryDatasets.Dataset, Base.UnitRange{Int64}})
        isdefined(InMemoryDatasets, Symbol("#gatherby##kw")) && precompile(Tuple{InMemoryDatasets.var"#gatherby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.gatherby), InMemoryDatasets.Dataset, Int64})
        isdefined(InMemoryDatasets, Symbol("#groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#groupby##kw", NamedTuple{(:stable, :threads), Tuple{Bool, Bool}}, typeof(InMemoryDatasets.groupby), InMemoryDatasets.Dataset, Base.UnitRange{Int64}})
        isdefined(InMemoryDatasets, Symbol("#groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#groupby##kw", NamedTuple{(:stable, :threads), Tuple{Bool, Bool}}, typeof(InMemoryDatasets.groupby), InMemoryDatasets.Dataset, Int64})
        isdefined(InMemoryDatasets, Symbol("#groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#groupby##kw", NamedTuple{(:stable,), Tuple{Bool}}, typeof(InMemoryDatasets.groupby), InMemoryDatasets.Dataset, Symbol})
        isdefined(InMemoryDatasets, Symbol("#groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#groupby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.groupby), InMemoryDatasets.Dataset, Array{Int64, 1}})
        isdefined(InMemoryDatasets, Symbol("#groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#groupby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.groupby), InMemoryDatasets.Dataset, Base.UnitRange{Int64}})
        isdefined(InMemoryDatasets, Symbol("#groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#groupby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.groupby), InMemoryDatasets.Dataset, Int64})
        isdefined(InMemoryDatasets, Symbol("#groupby##kw")) && precompile(Tuple{InMemoryDatasets.var"#groupby##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.groupby), InMemoryDatasets.Dataset, Symbol})
        isdefined(InMemoryDatasets, Symbol("#insertcols!##kw")) && precompile(Tuple{InMemoryDatasets.var"#insertcols!##kw", NamedTuple{(:unsupported_copy_cols, :makeunique), Tuple{Bool, Bool}}, typeof(InMemoryDatasets.insertcols!), InMemoryDatasets.Dataset, Int64, Pair{Symbol, PooledArrays.PooledArray{Union{Base.Missing, String}, UInt32, 1, Array{UInt32, 1}}}})
        isdefined(InMemoryDatasets, Symbol("#insertcols!##kw")) && precompile(Tuple{InMemoryDatasets.var"#insertcols!##kw", NamedTuple{(:unsupported_copy_cols,), Tuple{Bool}}, typeof(InMemoryDatasets.insertcols!), InMemoryDatasets.Dataset, Int64, Pair{Symbol, Array{Union{Base.Missing, String}, 1}}})
        isdefined(InMemoryDatasets, Symbol("#row_all##kw")) && precompile(Tuple{InMemoryDatasets.var"#row_all##kw", NamedTuple{(:threads,), Tuple{Bool}}, typeof(InMemoryDatasets.row_all), InMemoryDatasets.Dataset, Base.Fix2{typeof(Base.isequal), Int64}, Base.OneTo{Int64}})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.sort), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.sum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.mean), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.median!), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.median), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.std), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(InMemoryDatasets.var), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.sort), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.sum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.mean), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.median!), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.median), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.std), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(InMemoryDatasets.var), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.mean), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.median!), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.median), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.std), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.var), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.mean), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.mean), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.median!), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.median), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.median), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.std), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.std), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.var), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.var), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.sort), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Float32}, 1}, typeof(Base.length), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.length), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.length), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(Base.sum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int32}, 1}, typeof(InMemoryDatasets.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.length), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.length), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.maximum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.minimum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.sort), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.sort), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(Base.sum), Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.maximum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.minimum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, typeof(InMemoryDatasets.sum), Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._add_one_col_combine_tuple!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Float64}, 1}, Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}, typeof(identity), Array{Int32, 1}, Int32, Array{Int64, 1}, Int32, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Dates.Date}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Float32}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Float64}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, InMemoryDatasets.Characters{12}}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, InMemoryDatasets.Characters{3}}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, InMemoryDatasets.Characters{5}}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Int32}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, Int64}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Array{Union{Base.Missing, String}, 1}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Base.SubArray{Union{Base.Missing, Dates.Date}, 1, Array{Union{Base.Missing, Dates.Date}, 1}, Tuple{Base.OneTo{Int64}}, true}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.OneTo{Int64}}, true}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._apply_by_f_barrier), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, typeof(Base.identity), Bool, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._check_allocation_limit), Type, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._check_mutliple_rows_for_each_group), InMemoryDatasets.Dataset, Array{Any, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._cleanup_starts!), Array{Int32, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._columns), InMemoryDatasets.Dataset})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Float32}, 1}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Float32}, 1}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Float64}, 1}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Float64}, 1}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Int32}, 1}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Int32}, 1}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Int64}, 1}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier), Array{Union{Base.Missing, Int64}, 1}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int64, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier_special), Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Int64, Int32, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier_special), Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, InMemoryDatasets.Dataset, Symbol, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Int64, Int64, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._combine_f_barrier_tuple), Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}, InMemoryDatasets.Dataset, Tuple{Symbol, Symbol}, typeof(identity), Symbol, Base.Dict{Symbol, Int64}, Array{Int32, 1}, Int32, Array{Int64, 1}, Int32, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._compute_the_mutli_row_trans!), Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, typeof(Base.sort), Int64, Array{Int32, 1}, Int32, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._compute_the_mutli_row_trans!), Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Array{Int64, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, typeof(Base.sort), Int64, Array{Int32, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_for_join), typeof(identity), Array{Union{Base.Missing, Int64}, 1}, typeof(identity), Array{Union{Base.Missing, Int64}, 1}, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_for_join), typeof(identity), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, typeof(identity), Array{Union{Base.Missing, String}, 1}, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_for_join_general), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_for_join_int), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int64}, 1}, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_for_join_int), typeof(Base.identity), Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int64, 1}, Int64, Int32, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_for_join_int), typeof(Base.identity), Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int64, 1}, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Dates.Date}, 1}, Int32, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Dates.Date}, 1}, UInt64, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int32}, 1}, Int64, Int32, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int32}, 1}, UInt64, Int32, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int64}, 1}, Int64, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int64}, 1}, UInt64, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, typeof(Base.identity), Array{UInt32, 1}, Int32, UInt32, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, typeof(Base.identity), Array{UInt32, 1}, Int64, UInt32, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, typeof(Base.identity), Array{UInt32, 1}, UInt64, UInt32, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, typeof(InMemoryDatasets._date_value), Array{Union{Base.Missing, Int64}, 1}, Int32, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, typeof(InMemoryDatasets._date_value), Array{Union{Base.Missing, Int64}, 1}, Int64, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, typeof(InMemoryDatasets._date_value), Array{Union{Base.Missing, Int64}, 1}, UInt64, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Int32}, Union{Base.Missing, Int32}, Union{Base.Missing, Int32}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}}, Int32, Int32, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_dictionary_int_fast!), Array{Int32, 1}, typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}, UInt64, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._create_index_for_newds), InMemoryDatasets.Dataset, Array{Any, 1}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._ds_sort_int_missatright_nopermx!), Array{UInt32, 1}, Array{Int32, 1}, Int64, UInt32, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._ds_sort_int_missatright_nopermx!), Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Int64, Int32, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._ds_sort_int_missatright_nopermx!), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Int64, Int64, Base.Val{Int32}})
        precompile(Tuple{typeof(InMemoryDatasets._f_barrier_give_start!), Array{Int32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_gcol!), Array{AbstractArray{T, N} where N where T, 1}, InMemoryDatasets.Dataset, Array{Int64, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}, Int32, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._fill_gcol!), Array{AbstractArray{T, N} where N where T, 1}, InMemoryDatasets.Dataset, Base.UnitRange{Int64}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}, Int32, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._fill_oncols_left_table_left_outer!), Array{Union{Base.Missing, Int32}, 1}, Array{Int32, 1}, Array{Int64, 1}, Array{Int64, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._fill_oncols_left_table_left_outer!), Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int64, 1}}, false}, Array{Int64, 1}, Array{Int64, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._fill_one_col_transpose!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Array{Union{Base.Missing, Float64}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._fill_one_col_transpose!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._fill_one_col_transpose_id!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Array{Union{Base.Missing, Float64}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Array{Bool, 2}, Array{Int32, 1}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._fill_one_col_transpose_id!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Array{Bool, 2}, Array{Int32, 1}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._fill_one_col_transpose_id!), Array{Array{Union{Base.Missing, Int64}, 1}, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Array{Bool, 2}, Array{Int32, 1}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._fill_one_col_transpose_id!), Array{Array{Union{Base.Missing, String}, 1}, 1}, Array{Union{Base.Missing, String}, 1}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Array{Bool, 2}, Array{Int32, 1}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._fill_onecol_for_tr!), Array{UInt32, 1}, Array{UInt32, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_onecol_for_tr!), Array{Union{Base.Missing, Dates.Date}, 1}, Array{Union{Base.Missing, Dates.Date}, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_onecol_for_tr!), Array{Union{Base.Missing, Float32}, 1}, Array{Union{Base.Missing, Float32}, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_onecol_for_tr!), Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_onecol_for_tr!), Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_onecol_for_tr!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_onecol_for_tr!), Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}, Int64, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}}, false}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_ranges_for_fast_int_sort!), Array{Int32, 1}, Array{Int32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._fill_res_with_special_res!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Int32, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._fill_res_with_special_res!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{AbstractArray{Union{Base.Missing, Int64}, 1}, 1}, Int64, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._find_counts_for_join), Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int32})
        precompile(Tuple{typeof(InMemoryDatasets._find_counts_for_join), Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._find_right_not_in_left), Array{Base.UnitRange{Int32}, 1}, Int64, Array{Int32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._missings), Type{Union{Base.Missing, Float64}}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._names), InMemoryDatasets.Dataset})
        precompile(Tuple{typeof(InMemoryDatasets._obtain_maximum_groups_size), Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._op_for_argminmax!), Array{UInt32, 1}, Array{Union{Base.Missing, Float64}, 1}, typeof(Base.identity), Array{Union{Base.Missing, Float64}, 1}, Base.RefValue{Int64}, UInt32, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._preallocate_outputmat!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Int64, Int64, Base.Missing, Bool, Base.Val{Union{Base.Missing, Float64}}})
        precompile(Tuple{typeof(InMemoryDatasets._preallocate_outputmat!), Array{Array{Union{Base.Missing, Int64}, 1}, 1}, Int64, Int64, Base.Missing, Bool, Base.Val{Union{Base.Missing, Int64}}})
        precompile(Tuple{typeof(InMemoryDatasets._preallocate_outputmat!), Array{Array{Union{Base.Missing, String}, 1}, 1}, Int64, Int64, Base.Missing, Bool, Base.Val{Union{Base.Missing, String}}})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Any, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Char, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Dates.Date, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Float32, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Float64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Int32, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{String, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, Char}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, Dates.Date}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, Float32}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, Float64}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, InMemoryDatasets.Characters{12}}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, InMemoryDatasets.Characters{3}}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, InMemoryDatasets.Characters{5}}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, Int32}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, Int64}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Array{Union{Base.Missing, String}, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), Dates.Millisecond, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Float64}, Union{Base.Missing, Float64}, Union{Base.Missing, Float64}, Array{Union{Base.Missing, Float64}, 1}, Array{Union{Base.Missing, Float64}, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Int32}, Union{Base.Missing, Int32}, Union{Base.Missing, Int32}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Array{Union{Base.Missing, String}, 1}, Array{Union{Base.Missing, String}, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Array{Union{Base.Missing, String}, 1}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, String}, Union{Base.Missing, String}, Union{Base.Missing, String}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Base.OneTo{Int64}}, true}, Array{Union{Base.Missing, String}, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), PooledArrays.PooledArray{InMemoryDatasets.Characters{12}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), PooledArrays.PooledArray{InMemoryDatasets.Characters{3}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), PooledArrays.PooledArray{InMemoryDatasets.Characters{5}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{12}}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{3}}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{5}}, UInt32, 1, Array{UInt32, 1}}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._preprocess_column), String, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._push_groups_to_res!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Int32, 1}, Array{Int64, 1}, Int32, Int64, Array{Int64, 1}, Int32, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._push_groups_to_res!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Int32, 1}, Array{Int64, 1}, Int64, Int64, Array{Int64, 1}, Int32, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._push_groups_to_res!), Array{AbstractArray{T, 1} where T, 1}, Array{Union{Base.Missing, Int64}, 1}, Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Array{Int32, 1}}, false}, Array{Int32, 1}, Array{Int64, 1}, Int64, Int64, Array{Int64, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._push_groups_to_res_pa!), Array{AbstractArray{T, 1} where T, 1}, PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{5}}, UInt32, 1, Array{UInt32, 1}}, Base.SubArray{Union{Base.Missing, InMemoryDatasets.Characters{5}}, 1, PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{5}}, UInt32, 1, Array{UInt32, 1}}, Tuple{Array{Int32, 1}}, false}, Array{Int32, 1}, Array{Int64, 1}, Int32, Int64, Array{Int64, 1}, Int32, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._query_dictionary_for_join_general), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Base.Missing, Array{Int32, 1}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._query_dictionary_for_join_general), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, String, Array{Int32, 1}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._query_dictionary_for_join_int), typeof(identity), Array{Union{Base.Missing, Int64}, 1}, Int64, Array{Int32, 1}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._remove_unwantedstarts!), Array{Int32, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Dates.Date}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Float32}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Float64}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Int32}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, Int64}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, Array{Union{Base.Missing, String}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{12}}, UInt32, 1, Array{UInt32, 1}}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{3}}, UInt32, 1, Array{UInt32, 1}}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Any, 2}, PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{5}}, UInt32, 1, Array{UInt32, 1}}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Union{Base.Missing, Float64}, 2}, Array{Union{Base.Missing, Float64}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_ds_transpose!), Array{Union{Base.Missing, Float64}, 2}, Array{Union{Base.Missing, Int64}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._simple_transpose_ds_generate), Type, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, Int64, Array{String, 1}, String, Bool})
        precompile(Tuple{typeof(InMemoryDatasets._sortperm_unstable_using_hpsort!), Array{Int32, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{12}}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, Base.Sort.QuickSortAlg})
        precompile(Tuple{typeof(InMemoryDatasets._sortperm_unstable_using_hpsort!), Array{Int32, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{12}}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        precompile(Tuple{typeof(InMemoryDatasets._sortperm_unstable_using_hpsort!), Array{Int32, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{3}}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, Base.Sort.QuickSortAlg})
        precompile(Tuple{typeof(InMemoryDatasets._sortperm_unstable_using_hpsort!), Array{Int32, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{3}}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        precompile(Tuple{typeof(InMemoryDatasets._sortperm_unstable_using_hpsort!), Array{Int32, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{5}}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, Base.Sort.QuickSortAlg})
        precompile(Tuple{typeof(InMemoryDatasets._sortperm_unstable_using_hpsort!), Array{Int32, 1}, Array{Union{Base.Missing, InMemoryDatasets.Characters{5}}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        precompile(Tuple{typeof(InMemoryDatasets._sortperm_unstable_using_hpsort!), Array{Int32, 1}, Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        precompile(Tuple{typeof(InMemoryDatasets._sortperm_unstable_using_hpsort!), Array{Int32, 1}, Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, Int32, Base.Order.ForwardOrdering, InMemoryDatasets.HeapSortAlg})
        precompile(Tuple{typeof(InMemoryDatasets._special_res_fill_barrier!), Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._stat_add_sum), Float64, Base.Missing})
        precompile(Tuple{typeof(InMemoryDatasets._stat_add_sum), Float64, Float64})
        precompile(Tuple{typeof(InMemoryDatasets._stat_max_fun), Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._stat_min_fun), Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{UInt32, 1}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Dates.Date}, 1}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Float32}, 1}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Float64}, 1}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Float64}, 1}, Base.UnitRange{Int64}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Int32}, 1}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Int32}, 1}, Base.UnitRange{Int64}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Int64}, 1}, Array{Int32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Int64}, 1}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, Int64}, 1}, Base.UnitRange{Int64}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, String}, 1}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets._threaded_permute), Array{Union{Base.Missing, String}, 1}, Base.UnitRange{Int64}})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Dates.Date}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Float32}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Float64}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Int32}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, Int64}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Array{Union{Base.Missing, String}, 1}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Base.SubArray{Union{Base.Missing, Int64}, 1, Array{Union{Base.Missing, Int64}, 1}, Tuple{Base.OneTo{Int64}}, true}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Base.SubArray{Union{Base.Missing, String}, 1, Array{Union{Base.Missing, String}, 1}, Tuple{Array{Int64, 1}}, false}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), PooledArrays.PooledArray{Union{Base.Missing, InMemoryDatasets.Characters{5}}, UInt32, 1, Array{UInt32, 1}}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.allocatecol), Type, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.cumsum!), Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.do_call), typeof(Statistics.cor), Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}, Base.UnitRange{Int64}})
        precompile(Tuple{typeof(InMemoryDatasets.duplicates), InMemoryDatasets.Dataset})
        precompile(Tuple{typeof(InMemoryDatasets.getformat), InMemoryDatasets.Dataset, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.heapleft), Int64})
        precompile(Tuple{typeof(InMemoryDatasets.heapright), Int64})
        precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
        precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, Float32}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
        precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
        precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, Float64}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
        precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, Base.Sort.QuickSortAlg, Base.Order.ForwardOrdering})
        precompile(Tuple{typeof(InMemoryDatasets.hp_ds_sort!), Array{Union{Base.Missing, String}, 1}, Array{Int32, 1}, InMemoryDatasets.HeapSortAlg, Base.Order.ForwardOrdering})
        precompile(Tuple{typeof(InMemoryDatasets.hp_maximum), Array{UInt32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.hp_maximum), Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.hp_maximum), Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.hp_maximum), typeof(identity), Array{Union{Base.Missing, String}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.hp_minimum), Array{UInt32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.hp_minimum), Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.hp_minimum), Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.hp_minimum), typeof(identity), Array{Union{Base.Missing, String}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.index), InMemoryDatasets.Dataset})
        precompile(Tuple{typeof(InMemoryDatasets.maximum), typeof(identity), Array{Array{Int64, 1}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.multiple_getindex), InMemoryDatasets.Index, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.multiple_getindex), InMemoryDatasets.Index, Array{Symbol, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.multiple_getindex), InMemoryDatasets.Index, Symbol})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Array{Int64, 1}, _A} where _A, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Base.Regex, _A} where _A, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(Base.length)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(Base.maximum)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(Base.minimum)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(Base.sort)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(Base.sum)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(InMemoryDatasets.maximum)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(InMemoryDatasets.mean)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(InMemoryDatasets.median!)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(InMemoryDatasets.median)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(InMemoryDatasets.minimum)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(InMemoryDatasets.std)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(InMemoryDatasets.sum)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Array{Pair{Int64, typeof(InMemoryDatasets.var)}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Pair{Tuple{Int64, Int64}, typeof(Statistics.cor)}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine!), InMemoryDatasets.Index, InMemoryDatasets.Index, Pair{var"#s153", var"#s152"} where var"#s152"<:Union{Expr, Function} where var"#s153"<:Union{Base.Colon, Base.Regex, AbstractArray{T, 1} where T, DataAPI.All{T} where T<:Tuple, DataAPI.Between{T1, T2} where T2<:Union{Int64, Symbol} where T1<:Union{Int64, Symbol}, DataAPI.Cols{T} where T<:Tuple, InvertedIndices.InvertedIndex{S} where S}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_combine_multiple!), InMemoryDatasets.Index, InMemoryDatasets.Index, Int})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_select!), Array{Array{Int64, 1}, 1}, InMemoryDatasets.Index, Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_select!), Array{Array{Int64, 1}, 1}, InMemoryDatasets.Index, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.normalize_select), InMemoryDatasets.Index, Int, Vararg{Any}})
        precompile(Tuple{typeof(InMemoryDatasets.our_cumsum!), Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, Dates.Date, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, Float32, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, Float64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, InMemoryDatasets.Characters{12}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, InMemoryDatasets.Characters{3}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, InMemoryDatasets.Characters{5}, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, Int32, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, Int64, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.ourshow), Base.GenericIOBuffer{Array{UInt8, 1}}, String, Int64})
        precompile(Tuple{typeof(InMemoryDatasets.rename!), InMemoryDatasets.Dataset, Array{Symbol, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.return_type), typeof(identity), Array{Union{Base.Missing, Float32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.return_type), typeof(identity), Array{Union{Base.Missing, Float64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.return_type), typeof(identity), Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.return_type), typeof(identity), Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.return_type), typeof(identity), Tuple{Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}})
        precompile(Tuple{typeof(InMemoryDatasets.select!), InMemoryDatasets.Dataset, Int, Vararg{Any}})
        precompile(Tuple{typeof(InMemoryDatasets.setformat!), InMemoryDatasets.Dataset, Pair{Int64, typeof(Base.identity)}})
        precompile(Tuple{typeof(InMemoryDatasets.setformat!), InMemoryDatasets.Dataset, Pair{Symbol, typeof(Base.identity)}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), Array{UInt32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Dates.Date}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), typeof(Base.identity), Array{Int32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), typeof(Base.identity), Array{UInt32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), typeof(Base.identity), Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), typeof(Base.identity), Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Int32}, Union{Base.Missing, Int32}, Union{Base.Missing, Int32}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_maximum), typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), Array{UInt32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Dates.Date}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), Base.ComposedFunction{typeof(InMemoryDatasets._date_value), typeof(Base.identity)}, Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), typeof(Base.identity), Array{UInt32, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), typeof(Base.identity), Array{Union{Base.Missing, Int32}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), typeof(Base.identity), Array{Union{Base.Missing, Int64}, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Int32}, Union{Base.Missing, Int32}, Union{Base.Missing, Int32}, Array{Union{Base.Missing, Int32}, 1}, Array{Union{Base.Missing, Int32}, 1}}})
        precompile(Tuple{typeof(InMemoryDatasets.stat_minimum), typeof(InMemoryDatasets._date_value), InMemoryDatasets.Cat2Vec{typeof(Base.identity), typeof(Base.identity), Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Union{Base.Missing, Int64}, Array{Union{Base.Missing, Int64}, 1}, Array{Union{Base.Missing, Int64}, 1}}})
        precompile(Tuple{typeof(InMemoryDatasets.sum), Array{Int64, 1}})
        precompile(Tuple{typeof(InMemoryDatasets.update_outputmat!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Array{Int32, 1}, Int64, Array{Bool, 2}, Bool})
        precompile(Tuple{typeof(InMemoryDatasets.update_outputmat!), Array{Array{Union{Base.Missing, Float64}, 1}, 1}, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Int64, Bool})
        precompile(Tuple{typeof(InMemoryDatasets.update_outputmat!), Array{Array{Union{Base.Missing, Int64}, 1}, 1}, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Array{Int32, 1}, Int64, Array{Bool, 2}, Bool})
        precompile(Tuple{typeof(InMemoryDatasets.update_outputmat!), Array{Array{Union{Base.Missing, String}, 1}, 1}, Base.SubArray{AbstractArray{T, 1} where T, 1, Array{AbstractArray{T, 1} where T, 1}, Tuple{Array{Int64, 1}}, false}, Base.SubArray{Int32, 1, Array{Int32, 1}, Tuple{Base.UnitRange{Int64}}, true}, Array{Int32, 1}, Array{Int32, 1}, Int64, Array{Bool, 2}, Bool})
    return nothing
end